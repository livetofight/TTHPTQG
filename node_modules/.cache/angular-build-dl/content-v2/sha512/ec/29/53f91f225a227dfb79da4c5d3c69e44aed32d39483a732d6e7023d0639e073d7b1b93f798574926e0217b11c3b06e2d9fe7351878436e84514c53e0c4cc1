{"version":3,"sources":["./node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js","./src/app/_services/student.service.ts","./src/app/admin/admin-routing.component.ts","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/admin/admin.module.ts","./src/app/admin/dashboard/dashboard.component.ts","./src/app/admin/dashboard/dashboard.component.html","./src/app/admin/exam/exam.component.ts","./src/app/admin/exam/exam.component.html","./src/app/admin/examlist/examlist.component.ts","./src/app/admin/examlist/examlist.component.html","./src/app/admin/layout/content/content.component.ts","./src/app/admin/layout/content/content.component.html","./src/app/admin/layout/control-sidebar/control-sidebar.component.ts","./src/app/admin/layout/control-sidebar/control-sidebar.component.html","./src/app/admin/layout/footer/footer.component.ts","./src/app/admin/layout/footer/footer.component.html","./src/app/admin/layout/header/header.component.ts","./src/app/admin/layout/header/header.component.html","./src/app/admin/layout/left-side/left-side.component.ts","./src/app/admin/layout/left-side/left-side.component.html","./src/app/admin/question/question.component.ts","./src/app/admin/question/question.component.html","./src/app/admin/student/student.component.ts","./src/app/admin/student/student.component.html","./src/app/admin/subject/subject.component.ts","./src/app/admin/subject/subject.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEoG;AAC9D;AACkB;AACM;;AAE9D;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACxC;AACA;AACA,WAAW,EAOV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,WAAW,EAOV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA,wCAAwC,EAAE;AAC1C;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,8CAA8C,EAAE;AAChD,sDAAsD,EAAE;AACxD,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,wCAAwC,EAAE;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,6CAA6C,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,8BAA8B,EAAE,kDAAkD,EAAE;AACpF;AACA;AACA,WAAW,EA0BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,WAAW,EAqBV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA,oBAAoB,8BAA8B;AAClD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA,wBAAwB,gCAAgC;AACxD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA,oBAAoB,gCAAgC;AACpD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA,wBAAwB,kCAAkC;AAC1D;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,WAAW,EAOV;AACD;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,WAAW,EAiBV;AACD;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA,sCAAsC,EAAE,OAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B,2CAA2C,EAAE;AAC7C,4BAA4B,EAAE;AAC9B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,sCAAsC,EAAE;AACxC;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA,0BAA0B,oBAAoB,wBAAwB,EAAE;AACxE;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA,uBAAuB,oBAAoB,wBAAwB,EAAE;AACrE;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA,0BAA0B,oBAAoB,wBAAwB,EAAE;AACxE;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,+BAA+B,EAAE,iBAAiB,EAAE;AACpD,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,iDAAiD,EAAE,MAAM,wBAAwB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,+BAA+B,EAAE,qCAAqC,EAAE,iBAAiB,EAAE,iBAAiB,EAAE;AAC9G,wBAAwB,EAAE;AAC1B,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,sEAAsE,EAAE;AACxE,8CAA8C,EAAE;AAChD,oCAAoC,EAAE;AACtC;AACA;AACA;AACA,uCAAuC,EAAE;AACzC,mDAAmD,EAAE;AACrD,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA,4CAA4C,EAAE;AAC9C;AACA;AACA,4CAA4C,EAAE;AAC9C;AACA;AACA;AACA,wCAAwC,EAAE;AAC1C;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,WAAW,EAqBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,WAAW,EAWV;AACD;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,4DAA4D,EAAE;AAC9D;AACA;AACA;AACA;AACA,kCAAkC,EAAE;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,qBAAqB;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,iEAAiE,EAAE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,6DAA6D,EAAE;AAC/D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW,EAqDV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,WAAW,EAiBV;AACD;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,WAAW,EAUV;AACD;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,WAAW,EAGV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,WAAW,EAGV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,WAAW,EAGV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,WAAW,EAKV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAiCV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW,EAGV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW,EAQV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,4BAA4B;AAC1F;AACA;AACA;AACA,6CAA6C,4BAA4B,IAAI,YAAY,GAAG,gBAAgB;AAC5G;AACA;AACA;AACA;AACA,WAAW,EAYV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,wBAAwB;AAC3D,6DAA6D,4BAA4B;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D,kBAAkB,eAAe,GAAG,GAAG,EAAE;AACzC,uCAAuC,eAAe;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,oCAAoC;AACpC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,EAAE,MAAM,6BAA6B;AAC7F;AACA;AACA;AACA,qDAAqD,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,wBAAwB,+CAAE,WAAW,gEAAS;AAC9C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,iCAAiC,EAAE,kBAAkB,6DAAM;AAC3D,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,0DAAG;AAC5C,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,yCAAyC,0DAAG;AAC5C,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,yCAAyC,0DAAG;AAC5C,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yCAAyC,0DAAG;AAC5C,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,iBAAiB;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA,gBAAgB;AAChB;AACA,4BAA4B;AAC5B,uDAAuD,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,yBAAyB;AACzB,oDAAoD,EAAE;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,0BAA0B;AAC1B,qDAAqD,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,6BAA6B;AAC7B,wDAAwD,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,kDAAkD,8BAA8B,sDAAe,eAAe;AAC9G,mBAAmB,gEAAyB,EAAE,8CAA8C;AAC5F;AACA;AACA,KAAK;AACL;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU,oBAAoB,EAAE,EAAE,QAAQ,EAAE;AACjE,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,WAAW,EASV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,WAAW,EAWV;AACD;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,8BAA8B,4DAAc;AAC5C;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,4DAA4D,qCAAqC;AACjG,wBAAwB,gEAAyB,EAAE,wDAAwD;AAC3G,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,6BAA6B,gBAAgB,EAAE;AACnE;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,8EAA8E,SAAS;AACvF;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,uBAAuB,GAAG;AAC1B,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2BAA2B;AACtD;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,kEAAkE,sCAAsC,sDAAe,wBAAwB,sDAAe,CAAC,wDAAQ,GAAG;AAC1K,2BAA2B,gEAAyB,EAAE,8DAA8D;AACpH;AACA;AACA,KAAK,6BAA6B;AAClC,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AACvE;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU,6BAA6B,GAAG;AAC/D,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;AAC9B,WAAW,EAWV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,iDAAiD,EAAE;AACnD;AACA;AACA;AACA;AACA;AACA,8DAA8D,oCAAoC,sDAAe,sBAAsB;AACvI,yBAAyB,gEAAyB,EAAE,0DAA0D;AAC9G;AACA;AACA,KAAK;AACL;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU,2BAA2B,EAAE,EAAE,QAAQ,EAAE;AACxE,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb,4BAA4B;AAC5B;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAMV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,aAAa,oBAAoB,EAAE,8BAA8B;AACjE;AACA,kDAAkD,gCAAgC;AAClF,mBAAmB,gEAAyB,EAAE,8CAA8C;AAC5F;AACA;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;AAC5C;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,WAAW,EASV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,EAAE;AACjD;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,yDAAyD,mCAAmC;AAC5F;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,wBAAwB;AACxB;AACA;AACA;AACA,qBAAqB,mCAAmC;AACxD;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,EAAE,MAAM,oBAAoB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,uBAAuB,MAAM;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,EAAE;AACnC,2BAA2B,2BAA2B;AACtD;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,0DAA0D,kCAAkC,sDAAe,cAAc;AACzH,uBAAuB,gEAAyB,EAAE,sDAAsD;AACxG;AACA;AACA,KAAK;AACL;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU,mBAAmB,EAAE,EAAE,QAAQ,EAAE;AAChE,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb,6BAA6B,4DAAc;AAC3C,WAAW,EAAE;AACb,6BAA6B,4DAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EASV;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,6BAA6B,yEAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA,4EAA4E,2CAA2C,sDAAe,CAAC,wDAAQ,GAAG,sDAAe,CAAC,yDAAW,GAAG,sDAAe,oBAAoB;AACnN,gCAAgC,gEAAyB,EAAE,wEAAwE;AACnI;AACA;AACA,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC1E,KAAK,6BAA6B,OAAO,oDAAM,SAAS,yDAAW,IAAI,GAAG;AAC1E,KAAK,6BAA6B,OAAO,oDAAM,6BAA6B;AAC5E;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,GAAG;AACnB,sBAAsB,oDAAM;AAC5B,uBAAuB,yDAAW;AAClC,aAAa,GAAG,GAAG;AACnB,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;AAC9B,WAAW,EA+BV;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,6BAA6B,mDAAmD;AAChF;AACA;AACA;AACA;AACA,oEAAoE,uCAAuC,sDAAe,0BAA0B,sDAAe,oBAAoB;AACvL,4BAA4B,gEAAyB,EAAE,gEAAgE;AACvH;AACA;AACA,KAAK,+BAA+B;AACpC,KAAK,6BAA6B,OAAO,oDAAM,6BAA6B;AAC5E;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU,+BAA+B,GAAG;AACjE,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;AAC9B,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,2CAA2C,sDAAe,eAAe,sDAAe,CAAC,sDAAe,GAAG;AACvL,gCAAgC,gEAAyB,EAAE,wEAAwE;AACnI;AACA;AACA,KAAK,oBAAoB;AACzB,KAAK,OAAO,sDAAQ;AACpB;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU,oBAAoB,GAAG,OAAO,sDAAe,EAAE,EAAE,EAAE,QAAQ,EAAE;AAC5F,WAAW,EAgBV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,iBAAiB,0DAA0D;AAC3E;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAC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","file":"admin-admin-module-es2015.js","sourcesContent":["/**\n * @license Angular v9.0.6\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { Injectable, InjectionToken, Inject, PLATFORM_ID, Injector, NgModule } from '@angular/core';\nimport { of, Observable } from 'rxjs';\nimport { concatMap, filter, map } from 'rxjs/operators';\nimport { DOCUMENT, ɵparseCookieValue } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/common/http/src/backend.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a\n * `HttpResponse`.\n *\n * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the\n * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the\n * `HttpBackend`.\n *\n * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.\n *\n * \\@publicApi\n * @abstract\n */\nimport * as ɵngcc0 from '@angular/core';\nclass HttpHandler {\n}\nif (false) {\n    /**\n     * @abstract\n     * @param {?} req\n     * @return {?}\n     */\n    HttpHandler.prototype.handle = function (req) { };\n}\n/**\n * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.\n *\n * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.\n *\n * When injected, `HttpBackend` dispatches requests directly to the backend, without going\n * through the interceptor chain.\n *\n * \\@publicApi\n * @abstract\n */\nclass HttpBackend {\n}\nif (false) {\n    /**\n     * @abstract\n     * @param {?} req\n     * @return {?}\n     */\n    HttpBackend.prototype.handle = function (req) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/common/http/src/headers.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\nfunction Update() { }\nif (false) {\n    /** @type {?} */\n    Update.prototype.name;\n    /** @type {?|undefined} */\n    Update.prototype.value;\n    /** @type {?} */\n    Update.prototype.op;\n}\n/**\n * Represents the header configuration options for an HTTP request.\n * Instances are immutable. Modifying methods return a cloned\n * instance with the change. The original object is never changed.\n *\n * \\@publicApi\n */\nclass HttpHeaders {\n    /**\n     * Constructs a new HTTP header object with the given values.\n     * @param {?=} headers\n     */\n    constructor(headers) {\n        /**\n         * Internal map of lowercased header names to the normalized\n         * form of the name (the form seen first).\n         */\n        this.normalizedNames = new Map();\n        /**\n         * Queued updates to be materialized the next initialization.\n         */\n        this.lazyUpdate = null;\n        if (!headers) {\n            this.headers = new Map();\n        }\n        else if (typeof headers === 'string') {\n            this.lazyInit = (/**\n             * @return {?}\n             */\n            () => {\n                this.headers = new Map();\n                headers.split('\\n').forEach((/**\n                 * @param {?} line\n                 * @return {?}\n                 */\n                line => {\n                    /** @type {?} */\n                    const index = line.indexOf(':');\n                    if (index > 0) {\n                        /** @type {?} */\n                        const name = line.slice(0, index);\n                        /** @type {?} */\n                        const key = name.toLowerCase();\n                        /** @type {?} */\n                        const value = line.slice(index + 1).trim();\n                        this.maybeSetNormalizedName(name, key);\n                        if (this.headers.has(key)) {\n                            (/** @type {?} */ (this.headers.get(key))).push(value);\n                        }\n                        else {\n                            this.headers.set(key, [value]);\n                        }\n                    }\n                }));\n            });\n        }\n        else {\n            this.lazyInit = (/**\n             * @return {?}\n             */\n            () => {\n                this.headers = new Map();\n                Object.keys(headers).forEach((/**\n                 * @param {?} name\n                 * @return {?}\n                 */\n                name => {\n                    /** @type {?} */\n                    let values = headers[name];\n                    /** @type {?} */\n                    const key = name.toLowerCase();\n                    if (typeof values === 'string') {\n                        values = [values];\n                    }\n                    if (values.length > 0) {\n                        this.headers.set(key, values);\n                        this.maybeSetNormalizedName(name, key);\n                    }\n                }));\n            });\n        }\n    }\n    /**\n     * Checks for existence of a given header.\n     *\n     * @param {?} name The header name to check for existence.\n     *\n     * @return {?} True if the header exists, false otherwise.\n     */\n    has(name) {\n        this.init();\n        return this.headers.has(name.toLowerCase());\n    }\n    /**\n     * Retrieves the first value of a given header.\n     *\n     * @param {?} name The header name.\n     *\n     * @return {?} The value string if the header exists, null otherwise\n     */\n    get(name) {\n        this.init();\n        /** @type {?} */\n        const values = this.headers.get(name.toLowerCase());\n        return values && values.length > 0 ? values[0] : null;\n    }\n    /**\n     * Retrieves the names of the headers.\n     *\n     * @return {?} A list of header names.\n     */\n    keys() {\n        this.init();\n        return Array.from(this.normalizedNames.values());\n    }\n    /**\n     * Retrieves a list of values for a given header.\n     *\n     * @param {?} name The header name from which to retrieve values.\n     *\n     * @return {?} A string of values if the header exists, null otherwise.\n     */\n    getAll(name) {\n        this.init();\n        return this.headers.get(name.toLowerCase()) || null;\n    }\n    /**\n     * Appends a new value to the existing set of values for a header\n     * and returns them in a clone of the original instance.\n     *\n     * @param {?} name The header name for which to append the values.\n     * @param {?} value The value to append.\n     *\n     * @return {?} A clone of the HTTP headers object with the value appended to the given header.\n     */\n    append(name, value) {\n        return this.clone({ name, value, op: 'a' });\n    }\n    /**\n     * Sets or modifies a value for a given header in a clone of the original instance.\n     * If the header already exists, its value is replaced with the given value\n     * in the returned object.\n     *\n     * @param {?} name The header name.\n     * @param {?} value The value or values to set or overide for the given header.\n     *\n     * @return {?} A clone of the HTTP headers object with the newly set header value.\n     */\n    set(name, value) {\n        return this.clone({ name, value, op: 's' });\n    }\n    /**\n     * Deletes values for a given header in a clone of the original instance.\n     *\n     * @param {?} name The header name.\n     * @param {?=} value The value or values to delete for the given header.\n     *\n     * @return {?} A clone of the HTTP headers object with the given value deleted.\n     */\n    delete(name, value) {\n        return this.clone({ name, value, op: 'd' });\n    }\n    /**\n     * @private\n     * @param {?} name\n     * @param {?} lcName\n     * @return {?}\n     */\n    maybeSetNormalizedName(name, lcName) {\n        if (!this.normalizedNames.has(lcName)) {\n            this.normalizedNames.set(lcName, name);\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    init() {\n        if (!!this.lazyInit) {\n            if (this.lazyInit instanceof HttpHeaders) {\n                this.copyFrom(this.lazyInit);\n            }\n            else {\n                this.lazyInit();\n            }\n            this.lazyInit = null;\n            if (!!this.lazyUpdate) {\n                this.lazyUpdate.forEach((/**\n                 * @param {?} update\n                 * @return {?}\n                 */\n                update => this.applyUpdate(update)));\n                this.lazyUpdate = null;\n            }\n        }\n    }\n    /**\n     * @private\n     * @param {?} other\n     * @return {?}\n     */\n    copyFrom(other) {\n        other.init();\n        Array.from(other.headers.keys()).forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        key => {\n            this.headers.set(key, (/** @type {?} */ (other.headers.get(key))));\n            this.normalizedNames.set(key, (/** @type {?} */ (other.normalizedNames.get(key))));\n        }));\n    }\n    /**\n     * @private\n     * @param {?} update\n     * @return {?}\n     */\n    clone(update) {\n        /** @type {?} */\n        const clone = new HttpHeaders();\n        clone.lazyInit =\n            (!!this.lazyInit && this.lazyInit instanceof HttpHeaders) ? this.lazyInit : this;\n        clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);\n        return clone;\n    }\n    /**\n     * @private\n     * @param {?} update\n     * @return {?}\n     */\n    applyUpdate(update) {\n        /** @type {?} */\n        const key = update.name.toLowerCase();\n        switch (update.op) {\n            case 'a':\n            case 's':\n                /** @type {?} */\n                let value = (/** @type {?} */ (update.value));\n                if (typeof value === 'string') {\n                    value = [value];\n                }\n                if (value.length === 0) {\n                    return;\n                }\n                this.maybeSetNormalizedName(update.name, key);\n                /** @type {?} */\n                const base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];\n                base.push(...value);\n                this.headers.set(key, base);\n                break;\n            case 'd':\n                /** @type {?} */\n                const toDelete = (/** @type {?} */ (update.value));\n                if (!toDelete) {\n                    this.headers.delete(key);\n                    this.normalizedNames.delete(key);\n                }\n                else {\n                    /** @type {?} */\n                    let existing = this.headers.get(key);\n                    if (!existing) {\n                        return;\n                    }\n                    existing = existing.filter((/**\n                     * @param {?} value\n                     * @return {?}\n                     */\n                    value => toDelete.indexOf(value) === -1));\n                    if (existing.length === 0) {\n                        this.headers.delete(key);\n                        this.normalizedNames.delete(key);\n                    }\n                    else {\n                        this.headers.set(key, existing);\n                    }\n                }\n                break;\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    forEach(fn) {\n        this.init();\n        Array.from(this.normalizedNames.keys())\n            .forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        key => fn((/** @type {?} */ (this.normalizedNames.get(key))), (/** @type {?} */ (this.headers.get(key))))));\n    }\n}\nif (false) {\n    /**\n     * Internal map of lowercase header names to values.\n     * @type {?}\n     * @private\n     */\n    HttpHeaders.prototype.headers;\n    /**\n     * Internal map of lowercased header names to the normalized\n     * form of the name (the form seen first).\n     * @type {?}\n     * @private\n     */\n    HttpHeaders.prototype.normalizedNames;\n    /**\n     * Complete the lazy initialization of this object (needed before reading).\n     * @type {?}\n     * @private\n     */\n    HttpHeaders.prototype.lazyInit;\n    /**\n     * Queued updates to be materialized the next initialization.\n     * @type {?}\n     * @private\n     */\n    HttpHeaders.prototype.lazyUpdate;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/common/http/src/params.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A codec for encoding and decoding parameters in URLs.\n *\n * Used by `HttpParams`.\n *\n * \\@publicApi\n *\n * @record\n */\nfunction HttpParameterCodec() { }\nif (false) {\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    HttpParameterCodec.prototype.encodeKey = function (key) { };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    HttpParameterCodec.prototype.encodeValue = function (value) { };\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    HttpParameterCodec.prototype.decodeKey = function (key) { };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    HttpParameterCodec.prototype.decodeValue = function (value) { };\n}\n/**\n * Provides encoding and decoding of URL parameter and query-string values.\n *\n * Serializes and parses URL parameter keys and values to encode and decode them.\n * If you pass URL query parameters without encoding,\n * the query parameters can be misinterpreted at the receiving end.\n *\n *\n * \\@publicApi\n */\nclass HttpUrlEncodingCodec {\n    /**\n     * Encodes a key name for a URL parameter or query-string.\n     * @param {?} key The key name.\n     * @return {?} The encoded key name.\n     */\n    encodeKey(key) { return standardEncoding(key); }\n    /**\n     * Encodes the value of a URL parameter or query-string.\n     * @param {?} value The value.\n     * @return {?} The encoded value.\n     */\n    encodeValue(value) { return standardEncoding(value); }\n    /**\n     * Decodes an encoded URL parameter or query-string key.\n     * @param {?} key The encoded key name.\n     * @return {?} The decoded key name.\n     */\n    decodeKey(key) { return decodeURIComponent(key); }\n    /**\n     * Decodes an encoded URL parameter or query-string value.\n     * @param {?} value The encoded value.\n     * @return {?} The decoded value.\n     */\n    decodeValue(value) { return decodeURIComponent(value); }\n}\n/**\n * @param {?} rawParams\n * @param {?} codec\n * @return {?}\n */\nfunction paramParser(rawParams, codec) {\n    /** @type {?} */\n    const map = new Map();\n    if (rawParams.length > 0) {\n        /** @type {?} */\n        const params = rawParams.split('&');\n        params.forEach((/**\n         * @param {?} param\n         * @return {?}\n         */\n        (param) => {\n            /** @type {?} */\n            const eqIdx = param.indexOf('=');\n            const [key, val] = eqIdx == -1 ?\n                [codec.decodeKey(param), ''] :\n                [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))];\n            /** @type {?} */\n            const list = map.get(key) || [];\n            list.push(val);\n            map.set(key, list);\n        }));\n    }\n    return map;\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * @record\n */\nfunction Update$1() { }\nif (false) {\n    /** @type {?} */\n    Update$1.prototype.param;\n    /** @type {?|undefined} */\n    Update$1.prototype.value;\n    /** @type {?} */\n    Update$1.prototype.op;\n}\n/**\n * Options used to construct an `HttpParams` instance.\n *\n * \\@publicApi\n * @record\n */\nfunction HttpParamsOptions() { }\nif (false) {\n    /**\n     * String representation of the HTTP parameters in URL-query-string format.\n     * Mutually exclusive with `fromObject`.\n     * @type {?|undefined}\n     */\n    HttpParamsOptions.prototype.fromString;\n    /**\n     * Object map of the HTTP parameters. Mutually exclusive with `fromString`.\n     * @type {?|undefined}\n     */\n    HttpParamsOptions.prototype.fromObject;\n    /**\n     * Encoding codec used to parse and serialize the parameters.\n     * @type {?|undefined}\n     */\n    HttpParamsOptions.prototype.encoder;\n}\n/**\n * An HTTP request/response body that represents serialized parameters,\n * per the MIME type `application/x-www-form-urlencoded`.\n *\n * This class is immutable; all mutation operations return a new instance.\n *\n * \\@publicApi\n */\nclass HttpParams {\n    /**\n     * @param {?=} options\n     */\n    constructor(options = (/** @type {?} */ ({}))) {\n        this.updates = null;\n        this.cloneFrom = null;\n        this.encoder = options.encoder || new HttpUrlEncodingCodec();\n        if (!!options.fromString) {\n            if (!!options.fromObject) {\n                throw new Error(`Cannot specify both fromString and fromObject.`);\n            }\n            this.map = paramParser(options.fromString, this.encoder);\n        }\n        else if (!!options.fromObject) {\n            this.map = new Map();\n            Object.keys(options.fromObject).forEach((/**\n             * @param {?} key\n             * @return {?}\n             */\n            key => {\n                /** @type {?} */\n                const value = ((/** @type {?} */ (options.fromObject)))[key];\n                (/** @type {?} */ (this.map)).set(key, Array.isArray(value) ? value : [value]);\n            }));\n        }\n        else {\n            this.map = null;\n        }\n    }\n    /**\n     * Reports whether the body includes one or more values for a given parameter.\n     * @param {?} param The parameter name.\n     * @return {?} True if the parameter has one or more values,\n     * false if it has no value or is not present.\n     */\n    has(param) {\n        this.init();\n        return (/** @type {?} */ (this.map)).has(param);\n    }\n    /**\n     * Retrieves the first value for a parameter.\n     * @param {?} param The parameter name.\n     * @return {?} The first value of the given parameter,\n     * or `null` if the parameter is not present.\n     */\n    get(param) {\n        this.init();\n        /** @type {?} */\n        const res = (/** @type {?} */ (this.map)).get(param);\n        return !!res ? res[0] : null;\n    }\n    /**\n     * Retrieves all values for a  parameter.\n     * @param {?} param The parameter name.\n     * @return {?} All values in a string array,\n     * or `null` if the parameter not present.\n     */\n    getAll(param) {\n        this.init();\n        return (/** @type {?} */ (this.map)).get(param) || null;\n    }\n    /**\n     * Retrieves all the parameters for this body.\n     * @return {?} The parameter names in a string array.\n     */\n    keys() {\n        this.init();\n        return Array.from((/** @type {?} */ (this.map)).keys());\n    }\n    /**\n     * Appends a new value to existing values for a parameter.\n     * @param {?} param The parameter name.\n     * @param {?} value The new value to add.\n     * @return {?} A new body with the appended value.\n     */\n    append(param, value) { return this.clone({ param, value, op: 'a' }); }\n    /**\n     * Replaces the value for a parameter.\n     * @param {?} param The parameter name.\n     * @param {?} value The new value.\n     * @return {?} A new body with the new value.\n     */\n    set(param, value) { return this.clone({ param, value, op: 's' }); }\n    /**\n     * Removes a given value or all values from a parameter.\n     * @param {?} param The parameter name.\n     * @param {?=} value The value to remove, if provided.\n     * @return {?} A new body with the given value removed, or with all values\n     * removed if no value is specified.\n     */\n    delete(param, value) { return this.clone({ param, value, op: 'd' }); }\n    /**\n     * Serializes the body to an encoded string, where key-value pairs (separated by `=`) are\n     * separated by `&`s.\n     * @return {?}\n     */\n    toString() {\n        this.init();\n        return this.keys()\n            .map((/**\n         * @param {?} key\n         * @return {?}\n         */\n        key => {\n            /** @type {?} */\n            const eKey = this.encoder.encodeKey(key);\n            // `a: ['1']` produces `'a=1'`\n            // `b: []` produces `''`\n            // `c: ['1', '2']` produces `'c=1&c=2'`\n            return (/** @type {?} */ ((/** @type {?} */ (this.map)).get(key))).map((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => eKey + '=' + this.encoder.encodeValue(value)))\n                .join('&');\n        }))\n            // filter out empty values because `b: []` produces `''`\n            // which results in `a=1&&c=1&c=2` instead of `a=1&c=1&c=2` if we don't\n            .filter((/**\n         * @param {?} param\n         * @return {?}\n         */\n        param => param !== ''))\n            .join('&');\n    }\n    /**\n     * @private\n     * @param {?} update\n     * @return {?}\n     */\n    clone(update) {\n        /** @type {?} */\n        const clone = new HttpParams((/** @type {?} */ ({ encoder: this.encoder })));\n        clone.cloneFrom = this.cloneFrom || this;\n        clone.updates = (this.updates || []).concat([update]);\n        return clone;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    init() {\n        if (this.map === null) {\n            this.map = new Map();\n        }\n        if (this.cloneFrom !== null) {\n            this.cloneFrom.init();\n            this.cloneFrom.keys().forEach((/**\n             * @param {?} key\n             * @return {?}\n             */\n            key => (/** @type {?} */ (this.map)).set(key, (/** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ (this.cloneFrom)).map)).get(key))))));\n            (/** @type {?} */ (this.updates)).forEach((/**\n             * @param {?} update\n             * @return {?}\n             */\n            update => {\n                switch (update.op) {\n                    case 'a':\n                    case 's':\n                        /** @type {?} */\n                        const base = (update.op === 'a' ? (/** @type {?} */ (this.map)).get(update.param) : undefined) || [];\n                        base.push((/** @type {?} */ (update.value)));\n                        (/** @type {?} */ (this.map)).set(update.param, base);\n                        break;\n                    case 'd':\n                        if (update.value !== undefined) {\n                            /** @type {?} */\n                            let base = (/** @type {?} */ (this.map)).get(update.param) || [];\n                            /** @type {?} */\n                            const idx = base.indexOf(update.value);\n                            if (idx !== -1) {\n                                base.splice(idx, 1);\n                            }\n                            if (base.length > 0) {\n                                (/** @type {?} */ (this.map)).set(update.param, base);\n                            }\n                            else {\n                                (/** @type {?} */ (this.map)).delete(update.param);\n                            }\n                        }\n                        else {\n                            (/** @type {?} */ (this.map)).delete(update.param);\n                            break;\n                        }\n                }\n            }));\n            this.cloneFrom = this.updates = null;\n        }\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpParams.prototype.map;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpParams.prototype.encoder;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpParams.prototype.updates;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpParams.prototype.cloneFrom;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/common/http/src/request.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Construction interface for `HttpRequest`s.\n *\n * All values are optional and will override default values if provided.\n * @record\n */\nfunction HttpRequestInit() { }\nif (false) {\n    /** @type {?|undefined} */\n    HttpRequestInit.prototype.headers;\n    /** @type {?|undefined} */\n    HttpRequestInit.prototype.reportProgress;\n    /** @type {?|undefined} */\n    HttpRequestInit.prototype.params;\n    /** @type {?|undefined} */\n    HttpRequestInit.prototype.responseType;\n    /** @type {?|undefined} */\n    HttpRequestInit.prototype.withCredentials;\n}\n/**\n * Determine whether the given HTTP method may include a body.\n * @param {?} method\n * @return {?}\n */\nfunction mightHaveBody(method) {\n    switch (method) {\n        case 'DELETE':\n        case 'GET':\n        case 'HEAD':\n        case 'OPTIONS':\n        case 'JSONP':\n            return false;\n        default:\n            return true;\n    }\n}\n/**\n * Safely assert whether the given value is an ArrayBuffer.\n *\n * In some execution environments ArrayBuffer is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isArrayBuffer(value) {\n    return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;\n}\n/**\n * Safely assert whether the given value is a Blob.\n *\n * In some execution environments Blob is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isBlob(value) {\n    return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n/**\n * Safely assert whether the given value is a FormData instance.\n *\n * In some execution environments FormData is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isFormData(value) {\n    return typeof FormData !== 'undefined' && value instanceof FormData;\n}\n/**\n * An outgoing HTTP request with an optional typed body.\n *\n * `HttpRequest` represents an outgoing request, including URL, method,\n * headers, body, and other request configuration options. Instances should be\n * assumed to be immutable. To modify a `HttpRequest`, the `clone`\n * method should be used.\n *\n * \\@publicApi\n * @template T\n */\nclass HttpRequest {\n    /**\n     * @param {?} method\n     * @param {?} url\n     * @param {?=} third\n     * @param {?=} fourth\n     */\n    constructor(method, url, third, fourth) {\n        this.url = url;\n        /**\n         * The request body, or `null` if one isn't set.\n         *\n         * Bodies are not enforced to be immutable, as they can include a reference to any\n         * user-defined data type. However, interceptors should take care to preserve\n         * idempotence by treating them as such.\n         */\n        this.body = null;\n        /**\n         * Whether this request should be made in a way that exposes progress events.\n         *\n         * Progress events are expensive (change detection runs on each event) and so\n         * they should only be requested if the consumer intends to monitor them.\n         */\n        this.reportProgress = false;\n        /**\n         * Whether this request should be sent with outgoing credentials (cookies).\n         */\n        this.withCredentials = false;\n        /**\n         * The expected response type of the server.\n         *\n         * This is used to parse the response appropriately before returning it to\n         * the requestee.\n         */\n        this.responseType = 'json';\n        this.method = method.toUpperCase();\n        // Next, need to figure out which argument holds the HttpRequestInit\n        // options, if any.\n        /** @type {?} */\n        let options;\n        // Check whether a body argument is expected. The only valid way to omit\n        // the body argument is to use a known no-body method like GET.\n        if (mightHaveBody(this.method) || !!fourth) {\n            // Body is the third argument, options are the fourth.\n            this.body = (third !== undefined) ? (/** @type {?} */ (third)) : null;\n            options = fourth;\n        }\n        else {\n            // No body required, options are the third argument. The body stays null.\n            options = (/** @type {?} */ (third));\n        }\n        // If options have been passed, interpret them.\n        if (options) {\n            // Normalize reportProgress and withCredentials.\n            this.reportProgress = !!options.reportProgress;\n            this.withCredentials = !!options.withCredentials;\n            // Override default response type of 'json' if one is provided.\n            if (!!options.responseType) {\n                this.responseType = options.responseType;\n            }\n            // Override headers if they're provided.\n            if (!!options.headers) {\n                this.headers = options.headers;\n            }\n            if (!!options.params) {\n                this.params = options.params;\n            }\n        }\n        // If no headers have been passed in, construct a new HttpHeaders instance.\n        if (!this.headers) {\n            this.headers = new HttpHeaders();\n        }\n        // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.\n        if (!this.params) {\n            this.params = new HttpParams();\n            this.urlWithParams = url;\n        }\n        else {\n            // Encode the parameters to a string in preparation for inclusion in the URL.\n            /** @type {?} */\n            const params = this.params.toString();\n            if (params.length === 0) {\n                // No parameters, the visible URL is just the URL given at creation time.\n                this.urlWithParams = url;\n            }\n            else {\n                // Does the URL already have query parameters? Look for '?'.\n                /** @type {?} */\n                const qIdx = url.indexOf('?');\n                // There are 3 cases to handle:\n                // 1) No existing parameters -> append '?' followed by params.\n                // 2) '?' exists and is followed by existing query string ->\n                //    append '&' followed by params.\n                // 3) '?' exists at the end of the url -> append params directly.\n                // This basically amounts to determining the character, if any, with\n                // which to join the URL and parameters.\n                /** @type {?} */\n                const sep = qIdx === -1 ? '?' : (qIdx < url.length - 1 ? '&' : '');\n                this.urlWithParams = url + sep + params;\n            }\n        }\n    }\n    /**\n     * Transform the free-form body into a serialized format suitable for\n     * transmission to the server.\n     * @return {?}\n     */\n    serializeBody() {\n        // If no body is present, no need to serialize it.\n        if (this.body === null) {\n            return null;\n        }\n        // Check whether the body is already in a serialized form. If so,\n        // it can just be returned directly.\n        if (isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) ||\n            typeof this.body === 'string') {\n            return this.body;\n        }\n        // Check whether the body is an instance of HttpUrlEncodedParams.\n        if (this.body instanceof HttpParams) {\n            return this.body.toString();\n        }\n        // Check whether the body is an object or array, and serialize with JSON if so.\n        if (typeof this.body === 'object' || typeof this.body === 'boolean' ||\n            Array.isArray(this.body)) {\n            return JSON.stringify(this.body);\n        }\n        // Fall back on toString() for everything else.\n        return ((/** @type {?} */ (this.body))).toString();\n    }\n    /**\n     * Examine the body and attempt to infer an appropriate MIME type\n     * for it.\n     *\n     * If no such type can be inferred, this method will return `null`.\n     * @return {?}\n     */\n    detectContentTypeHeader() {\n        // An empty body has no content type.\n        if (this.body === null) {\n            return null;\n        }\n        // FormData bodies rely on the browser's content type assignment.\n        if (isFormData(this.body)) {\n            return null;\n        }\n        // Blobs usually have their own content type. If it doesn't, then\n        // no type can be inferred.\n        if (isBlob(this.body)) {\n            return this.body.type || null;\n        }\n        // Array buffers have unknown contents and thus no type can be inferred.\n        if (isArrayBuffer(this.body)) {\n            return null;\n        }\n        // Technically, strings could be a form of JSON data, but it's safe enough\n        // to assume they're plain strings.\n        if (typeof this.body === 'string') {\n            return 'text/plain';\n        }\n        // `HttpUrlEncodedParams` has its own content-type.\n        if (this.body instanceof HttpParams) {\n            return 'application/x-www-form-urlencoded;charset=UTF-8';\n        }\n        // Arrays, objects, and numbers will be encoded as JSON.\n        if (typeof this.body === 'object' || typeof this.body === 'number' ||\n            Array.isArray(this.body)) {\n            return 'application/json';\n        }\n        // No type could be inferred.\n        return null;\n    }\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    clone(update = {}) {\n        // For method, url, and responseType, take the current value unless\n        // it is overridden in the update hash.\n        /** @type {?} */\n        const method = update.method || this.method;\n        /** @type {?} */\n        const url = update.url || this.url;\n        /** @type {?} */\n        const responseType = update.responseType || this.responseType;\n        // The body is somewhat special - a `null` value in update.body means\n        // whatever current body is present is being overridden with an empty\n        // body, whereas an `undefined` value in update.body implies no\n        // override.\n        /** @type {?} */\n        const body = (update.body !== undefined) ? update.body : this.body;\n        // Carefully handle the boolean options to differentiate between\n        // `false` and `undefined` in the update args.\n        /** @type {?} */\n        const withCredentials = (update.withCredentials !== undefined) ? update.withCredentials : this.withCredentials;\n        /** @type {?} */\n        const reportProgress = (update.reportProgress !== undefined) ? update.reportProgress : this.reportProgress;\n        // Headers and params may be appended to if `setHeaders` or\n        // `setParams` are used.\n        /** @type {?} */\n        let headers = update.headers || this.headers;\n        /** @type {?} */\n        let params = update.params || this.params;\n        // Check whether the caller has asked to add headers.\n        if (update.setHeaders !== undefined) {\n            // Set every requested header.\n            headers =\n                Object.keys(update.setHeaders)\n                    .reduce((/**\n                 * @param {?} headers\n                 * @param {?} name\n                 * @return {?}\n                 */\n                (headers, name) => headers.set(name, (/** @type {?} */ (update.setHeaders))[name])), headers);\n        }\n        // Check whether the caller has asked to set params.\n        if (update.setParams) {\n            // Set every requested param.\n            params = Object.keys(update.setParams)\n                .reduce((/**\n             * @param {?} params\n             * @param {?} param\n             * @return {?}\n             */\n            (params, param) => params.set(param, (/** @type {?} */ (update.setParams))[param])), params);\n        }\n        // Finally, construct the new HttpRequest using the pieces from above.\n        return new HttpRequest(method, url, body, {\n            params, headers, reportProgress, responseType, withCredentials,\n        });\n    }\n}\nif (false) {\n    /**\n     * The request body, or `null` if one isn't set.\n     *\n     * Bodies are not enforced to be immutable, as they can include a reference to any\n     * user-defined data type. However, interceptors should take care to preserve\n     * idempotence by treating them as such.\n     * @type {?}\n     */\n    HttpRequest.prototype.body;\n    /**\n     * Outgoing headers for this request.\n     * @type {?}\n     */\n    HttpRequest.prototype.headers;\n    /**\n     * Whether this request should be made in a way that exposes progress events.\n     *\n     * Progress events are expensive (change detection runs on each event) and so\n     * they should only be requested if the consumer intends to monitor them.\n     * @type {?}\n     */\n    HttpRequest.prototype.reportProgress;\n    /**\n     * Whether this request should be sent with outgoing credentials (cookies).\n     * @type {?}\n     */\n    HttpRequest.prototype.withCredentials;\n    /**\n     * The expected response type of the server.\n     *\n     * This is used to parse the response appropriately before returning it to\n     * the requestee.\n     * @type {?}\n     */\n    HttpRequest.prototype.responseType;\n    /**\n     * The outgoing HTTP request method.\n     * @type {?}\n     */\n    HttpRequest.prototype.method;\n    /**\n     * Outgoing URL parameters.\n     * @type {?}\n     */\n    HttpRequest.prototype.params;\n    /**\n     * The outgoing URL with all URL parameters set.\n     * @type {?}\n     */\n    HttpRequest.prototype.urlWithParams;\n    /** @type {?} */\n    HttpRequest.prototype.url;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/common/http/src/response.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst HttpEventType = {\n    /**\n     * The request was sent out over the wire.\n     */\n    Sent: 0,\n    /**\n     * An upload progress event was received.\n     */\n    UploadProgress: 1,\n    /**\n     * The response status code and headers were received.\n     */\n    ResponseHeader: 2,\n    /**\n     * A download progress event was received.\n     */\n    DownloadProgress: 3,\n    /**\n     * The full response including the body was received.\n     */\n    Response: 4,\n    /**\n     * A custom event from an interceptor or a backend.\n     */\n    User: 5,\n};\nHttpEventType[HttpEventType.Sent] = 'Sent';\nHttpEventType[HttpEventType.UploadProgress] = 'UploadProgress';\nHttpEventType[HttpEventType.ResponseHeader] = 'ResponseHeader';\nHttpEventType[HttpEventType.DownloadProgress] = 'DownloadProgress';\nHttpEventType[HttpEventType.Response] = 'Response';\nHttpEventType[HttpEventType.User] = 'User';\n/**\n * Base interface for progress events.\n *\n * \\@publicApi\n * @record\n */\nfunction HttpProgressEvent() { }\nif (false) {\n    /**\n     * Progress event type is either upload or download.\n     * @type {?}\n     */\n    HttpProgressEvent.prototype.type;\n    /**\n     * Number of bytes uploaded or downloaded.\n     * @type {?}\n     */\n    HttpProgressEvent.prototype.loaded;\n    /**\n     * Total number of bytes to upload or download. Depending on the request or\n     * response, this may not be computable and thus may not be present.\n     * @type {?|undefined}\n     */\n    HttpProgressEvent.prototype.total;\n}\n/**\n * A download progress event.\n *\n * \\@publicApi\n * @record\n */\nfunction HttpDownloadProgressEvent() { }\nif (false) {\n    /** @type {?} */\n    HttpDownloadProgressEvent.prototype.type;\n    /**\n     * The partial response body as downloaded so far.\n     *\n     * Only present if the responseType was `text`.\n     * @type {?|undefined}\n     */\n    HttpDownloadProgressEvent.prototype.partialText;\n}\n/**\n * An upload progress event.\n *\n * \\@publicApi\n * @record\n */\nfunction HttpUploadProgressEvent() { }\nif (false) {\n    /** @type {?} */\n    HttpUploadProgressEvent.prototype.type;\n}\n/**\n * An event indicating that the request was sent to the server. Useful\n * when a request may be retried multiple times, to distinguish between\n * retries on the final event stream.\n *\n * \\@publicApi\n * @record\n */\nfunction HttpSentEvent() { }\nif (false) {\n    /** @type {?} */\n    HttpSentEvent.prototype.type;\n}\n/**\n * A user-defined event.\n *\n * Grouping all custom events under this type ensures they will be handled\n * and forwarded by all implementations of interceptors.\n *\n * \\@publicApi\n * @record\n * @template T\n */\nfunction HttpUserEvent() { }\nif (false) {\n    /** @type {?} */\n    HttpUserEvent.prototype.type;\n}\n/**\n * An error that represents a failed attempt to JSON.parse text coming back\n * from the server.\n *\n * It bundles the Error object with the actual response body that failed to parse.\n *\n *\n * @record\n */\nfunction HttpJsonParseError() { }\nif (false) {\n    /** @type {?} */\n    HttpJsonParseError.prototype.error;\n    /** @type {?} */\n    HttpJsonParseError.prototype.text;\n}\n/**\n * Base class for both `HttpResponse` and `HttpHeaderResponse`.\n *\n * \\@publicApi\n * @abstract\n */\nclass HttpResponseBase {\n    /**\n     * Super-constructor for all responses.\n     *\n     * The single parameter accepted is an initialization hash. Any properties\n     * of the response passed there will override the default values.\n     * @param {?} init\n     * @param {?=} defaultStatus\n     * @param {?=} defaultStatusText\n     */\n    constructor(init, defaultStatus = 200, defaultStatusText = 'OK') {\n        // If the hash has values passed, use them to initialize the response.\n        // Otherwise use the default values.\n        this.headers = init.headers || new HttpHeaders();\n        this.status = init.status !== undefined ? init.status : defaultStatus;\n        this.statusText = init.statusText || defaultStatusText;\n        this.url = init.url || null;\n        // Cache the ok value to avoid defining a getter.\n        this.ok = this.status >= 200 && this.status < 300;\n    }\n}\nif (false) {\n    /**\n     * All response headers.\n     * @type {?}\n     */\n    HttpResponseBase.prototype.headers;\n    /**\n     * Response status code.\n     * @type {?}\n     */\n    HttpResponseBase.prototype.status;\n    /**\n     * Textual description of response status code.\n     *\n     * Do not depend on this.\n     * @type {?}\n     */\n    HttpResponseBase.prototype.statusText;\n    /**\n     * URL of the resource retrieved, or null if not available.\n     * @type {?}\n     */\n    HttpResponseBase.prototype.url;\n    /**\n     * Whether the status code falls in the 2xx range.\n     * @type {?}\n     */\n    HttpResponseBase.prototype.ok;\n    /**\n     * Type of the response, narrowed to either the full response or the header.\n     * @type {?}\n     */\n    HttpResponseBase.prototype.type;\n}\n/**\n * A partial HTTP response which only includes the status and header data,\n * but no response body.\n *\n * `HttpHeaderResponse` is a `HttpEvent` available on the response\n * event stream, only when progress events are requested.\n *\n * \\@publicApi\n */\nclass HttpHeaderResponse extends HttpResponseBase {\n    /**\n     * Create a new `HttpHeaderResponse` with the given parameters.\n     * @param {?=} init\n     */\n    constructor(init = {}) {\n        super(init);\n        this.type = HttpEventType.ResponseHeader;\n    }\n    /**\n     * Copy this `HttpHeaderResponse`, overriding its contents with the\n     * given parameter hash.\n     * @param {?=} update\n     * @return {?}\n     */\n    clone(update = {}) {\n        // Perform a straightforward initialization of the new HttpHeaderResponse,\n        // overriding the current parameters with new ones if given.\n        return new HttpHeaderResponse({\n            headers: update.headers || this.headers,\n            status: update.status !== undefined ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    }\n}\nif (false) {\n    /** @type {?} */\n    HttpHeaderResponse.prototype.type;\n}\n/**\n * A full HTTP response, including a typed response body (which may be `null`\n * if one was not returned).\n *\n * `HttpResponse` is a `HttpEvent` available on the response event\n * stream.\n *\n * \\@publicApi\n * @template T\n */\nclass HttpResponse extends HttpResponseBase {\n    /**\n     * Construct a new `HttpResponse`.\n     * @param {?=} init\n     */\n    constructor(init = {}) {\n        super(init);\n        this.type = HttpEventType.Response;\n        this.body = init.body !== undefined ? init.body : null;\n    }\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    clone(update = {}) {\n        return new HttpResponse({\n            body: (update.body !== undefined) ? update.body : this.body,\n            headers: update.headers || this.headers,\n            status: (update.status !== undefined) ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    }\n}\nif (false) {\n    /**\n     * The response body, or `null` if one was not returned.\n     * @type {?}\n     */\n    HttpResponse.prototype.body;\n    /** @type {?} */\n    HttpResponse.prototype.type;\n}\n/**\n * A response that represents an error or failure, either from a\n * non-successful HTTP status, an error while executing the request,\n * or some other failure which occurred during the parsing of the response.\n *\n * Any error returned on the `Observable` response stream will be\n * wrapped in an `HttpErrorResponse` to provide additional context about\n * the state of the HTTP layer when the error occurred. The error property\n * will contain either a wrapped Error object or the error response returned\n * from the server.\n *\n * \\@publicApi\n */\nclass HttpErrorResponse extends HttpResponseBase {\n    /**\n     * @param {?} init\n     */\n    constructor(init) {\n        // Initialize with a default status of 0 / Unknown Error.\n        super(init, 0, 'Unknown Error');\n        this.name = 'HttpErrorResponse';\n        /**\n         * Errors are never okay, even when the status code is in the 2xx success range.\n         */\n        this.ok = false;\n        // If the response was successful, then this was a parse error. Otherwise, it was\n        // a protocol-level failure of some sort. Either the request failed in transit\n        // or the server returned an unsuccessful status code.\n        if (this.status >= 200 && this.status < 300) {\n            this.message = `Http failure during parsing for ${init.url || '(unknown url)'}`;\n        }\n        else {\n            this.message =\n                `Http failure response for ${init.url || '(unknown url)'}: ${init.status} ${init.statusText}`;\n        }\n        this.error = init.error || null;\n    }\n}\nif (false) {\n    /** @type {?} */\n    HttpErrorResponse.prototype.name;\n    /** @type {?} */\n    HttpErrorResponse.prototype.message;\n    /** @type {?} */\n    HttpErrorResponse.prototype.error;\n    /**\n     * Errors are never okay, even when the status code is in the 2xx success range.\n     * @type {?}\n     */\n    HttpErrorResponse.prototype.ok;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/common/http/src/client.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Constructs an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and\n * the given `body`. This function clones the object and adds the body.\n *\n * Note that the `responseType` *options* value is a String that identifies the\n * single data type of the response.\n * A single overload version of the method handles each response type.\n * The value of `responseType` cannot be a union, as the combined signature could imply.\n *\n * @template T\n * @param {?} options\n * @param {?} body\n * @return {?}\n */\nfunction addBody(options, body) {\n    return {\n        body,\n        headers: options.headers,\n        observe: options.observe,\n        params: options.params,\n        reportProgress: options.reportProgress,\n        responseType: options.responseType,\n        withCredentials: options.withCredentials,\n    };\n}\n/**\n * Performs HTTP requests.\n * This service is available as an injectable class, with methods to perform HTTP requests.\n * Each request method has multiple signatures, and the return type varies based on\n * the signature that is called (mainly the values of `observe` and `responseType`).\n *\n * Note that the `responseType` *options* value is a String that identifies the\n * single data type of the response.\n * A single overload version of the method handles each response type.\n * The value of `responseType` cannot be a union, as the combined signature could imply.\n *\n * \\@usageNotes\n * Sample HTTP requests for the [Tour of Heroes](/tutorial/toh-pt0) application.\n *\n * ### HTTP Request Example\n *\n * ```\n *  // GET heroes whose name contains search term\n * searchHeroes(term: string): observable<Hero[]>{\n *\n *  const params = new HttpParams({fromString: 'name=term'});\n *    return this.httpClient.request('GET', this.heroesUrl, {responseType:'json', params});\n * }\n * ```\n * ### JSONP Example\n * ```\n * requestJsonp(url, callback = 'callback') {\n *  return this.httpClient.jsonp(this.heroesURL, callback);\n * }\n * ```\n *\n * ### PATCH Example\n * ```\n * // PATCH one of the heroes' name\n * patchHero (id: number, heroName: string): Observable<{}> {\n * const url = `${this.heroesUrl}/${id}`;   // PATCH api/heroes/42\n *  return this.httpClient.patch(url, {name: heroName}, httpOptions)\n *    .pipe(catchError(this.handleError('patchHero')));\n * }\n * ```\n *\n * @see [HTTP Guide](guide/http)\n *\n * \\@publicApi\n */\nclass HttpClient {\n    /**\n     * @param {?} handler\n     */\n    constructor(handler) {\n        this.handler = handler;\n    }\n    /**\n     * Constructs an observable for a generic HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * You can pass an `HttpRequest` directly as the only parameter. In this case,\n     * the call returns an observable of the raw `HttpEvent` stream.\n     *\n     * Alternatively you can pass an HTTP method as the first parameter,\n     * a URL string as the second, and an options hash containing the request body as the third.\n     * See `addBody()`. In this case, the specified `responseType` and `observe` options determine the\n     * type of returned observable.\n     *   * The `responseType` value determines how a successful response body is parsed.\n     *   * If `responseType` is the default `json`, you can pass a type interface for the resulting\n     * object as a type parameter to the call.\n     *\n     * The `observe` value determines the return type, according to what you are interested in\n     * observing.\n     *   * An `observe` value of events returns an observable of the raw `HttpEvent` stream, including\n     * progress events by default.\n     *   * An `observe` value of response returns an observable of `HttpResponse<T>`,\n     * where the `T` parameter depends on the `responseType` and any optionally provided type\n     * parameter.\n     *   * An `observe` value of body returns an observable of `<T>` with the same `T` body type.\n     *\n     * @param {?} first\n     * @param {?=} url\n     * @param {?=} options\n     * @return {?}\n     */\n    request(first, url, options = {}) {\n        /** @type {?} */\n        let req;\n        // First, check whether the primary argument is an instance of `HttpRequest`.\n        if (first instanceof HttpRequest) {\n            // It is. The other arguments must be undefined (per the signatures) and can be\n            // ignored.\n            req = first;\n        }\n        else {\n            // It's a string, so it represents a URL. Construct a request based on it,\n            // and incorporate the remaining arguments (assuming `GET` unless a method is\n            // provided.\n            // Figure out the headers.\n            /** @type {?} */\n            let headers = undefined;\n            if (options.headers instanceof HttpHeaders) {\n                headers = options.headers;\n            }\n            else {\n                headers = new HttpHeaders(options.headers);\n            }\n            // Sort out parameters.\n            /** @type {?} */\n            let params = undefined;\n            if (!!options.params) {\n                if (options.params instanceof HttpParams) {\n                    params = options.params;\n                }\n                else {\n                    params = new HttpParams((/** @type {?} */ ({ fromObject: options.params })));\n                }\n            }\n            // Construct the request.\n            req = new HttpRequest(first, (/** @type {?} */ (url)), (options.body !== undefined ? options.body : null), {\n                headers,\n                params,\n                reportProgress: options.reportProgress,\n                // By default, JSON is assumed to be returned for all calls.\n                responseType: options.responseType || 'json',\n                withCredentials: options.withCredentials,\n            });\n        }\n        // Start with an Observable.of() the initial request, and run the handler (which\n        // includes all interceptors) inside a concatMap(). This way, the handler runs\n        // inside an Observable chain, which causes interceptors to be re-run on every\n        // subscription (this also makes retries re-run the handler, including interceptors).\n        /** @type {?} */\n        const events$ = of(req).pipe(concatMap((/**\n         * @param {?} req\n         * @return {?}\n         */\n        (req) => this.handler.handle(req))));\n        // If coming via the API signature which accepts a previously constructed HttpRequest,\n        // the only option is to get the event stream. Otherwise, return the event stream if\n        // that is what was requested.\n        if (first instanceof HttpRequest || options.observe === 'events') {\n            return events$;\n        }\n        // The requested stream contains either the full response or the body. In either\n        // case, the first step is to filter the event stream to extract a stream of\n        // responses(s).\n        /** @type {?} */\n        const res$ = (/** @type {?} */ (events$.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => event instanceof HttpResponse)))));\n        // Decide which stream to return.\n        switch (options.observe || 'body') {\n            case 'body':\n                // The requested stream is the body. Map the response stream to the response\n                // body. This could be done more simply, but a misbehaving interceptor might\n                // transform the response body into a different format and ignore the requested\n                // responseType. Guard against this by validating that the response is of the\n                // requested type.\n                switch (req.responseType) {\n                    case 'arraybuffer':\n                        return res$.pipe(map((/**\n                         * @param {?} res\n                         * @return {?}\n                         */\n                        (res) => {\n                            // Validate that the body is an ArrayBuffer.\n                            if (res.body !== null && !(res.body instanceof ArrayBuffer)) {\n                                throw new Error('Response is not an ArrayBuffer.');\n                            }\n                            return res.body;\n                        })));\n                    case 'blob':\n                        return res$.pipe(map((/**\n                         * @param {?} res\n                         * @return {?}\n                         */\n                        (res) => {\n                            // Validate that the body is a Blob.\n                            if (res.body !== null && !(res.body instanceof Blob)) {\n                                throw new Error('Response is not a Blob.');\n                            }\n                            return res.body;\n                        })));\n                    case 'text':\n                        return res$.pipe(map((/**\n                         * @param {?} res\n                         * @return {?}\n                         */\n                        (res) => {\n                            // Validate that the body is a string.\n                            if (res.body !== null && typeof res.body !== 'string') {\n                                throw new Error('Response is not a string.');\n                            }\n                            return res.body;\n                        })));\n                    case 'json':\n                    default:\n                        // No validation needed for JSON responses, as they can be of any type.\n                        return res$.pipe(map((/**\n                         * @param {?} res\n                         * @return {?}\n                         */\n                        (res) => res.body)));\n                }\n            case 'response':\n                // The response stream was requested directly, so return it.\n                return res$;\n            default:\n                // Guard against new future observe types being added.\n                throw new Error(`Unreachable: unhandled observe type ${options.observe}}`);\n        }\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `DELETE` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     *\n     * @param {?} url     The endpoint URL.\n     * @param {?=} options The HTTP options to send with the request.\n     *\n     * @return {?}\n     */\n    delete(url, options = {}) {\n        return this.request('DELETE', url, (/** @type {?} */ (options)));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `GET` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    get(url, options = {}) {\n        return this.request('GET', url, (/** @type {?} */ (options)));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `HEAD` request to execute on the server. The `HEAD` method returns\n     * meta information about the resource without transferring the\n     * resource itself. See the individual overloads for\n     * details on the return type.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    head(url, options = {}) {\n        return this.request('HEAD', url, (/** @type {?} */ (options)));\n    }\n    /**\n     * Constructs an `Observable` that, when subscribed, causes a request with the special method\n     * `JSONP` to be dispatched via the interceptor pipeline.\n     * The [JSONP pattern](https://en.wikipedia.org/wiki/JSONP) works around limitations of certain\n     * API endpoints that don't support newer,\n     * and preferable [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) protocol.\n     * JSONP treats the endpoint API as a JavaScript file and tricks the browser to process the\n     * requests even if the API endpoint is not located on the same domain (origin) as the client-side\n     * application making the request.\n     * The endpoint API must support JSONP callback for JSONP requests to work.\n     * The resource API returns the JSON response wrapped in a callback function.\n     * You can pass the callback function name as one of the query parameters.\n     * Note that JSONP requests can only be used with `GET` requests.\n     *\n     * @template T\n     * @param {?} url The resource URL.\n     * @param {?} callbackParam The callback function name.\n     *\n     * @return {?}\n     */\n    jsonp(url, callbackParam) {\n        return this.request('JSONP', url, {\n            params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),\n            observe: 'body',\n            responseType: 'json',\n        });\n    }\n    /**\n     * Constructs an `Observable` that, when subscribed, causes the configured\n     * `OPTIONS` request to execute on the server. This method allows the client\n     * to determine the supported HTTP methods and other capabilites of an endpoint,\n     * without implying a resource action. See the individual overloads for\n     * details on the return type.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    options(url, options = {}) {\n        return this.request('OPTIONS', url, (/** @type {?} */ (options)));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PATCH` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    patch(url, body, options = {}) {\n        return this.request('PATCH', url, addBody(options, body));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `POST` request to execute on the server. The server responds with the location of\n     * the replaced resource. See the individual overloads for\n     * details on the return type.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    post(url, body, options = {}) {\n        return this.request('POST', url, addBody(options, body));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PUT` request to execute on the server. The `PUT` method replaces an existing resource\n     * with a new set of values.\n     * See the individual overloads for details on the return type.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    put(url, body, options = {}) {\n        return this.request('PUT', url, addBody(options, body));\n    }\n}\nHttpClient.ɵfac = function HttpClient_Factory(t) { return new (t || HttpClient)(ɵngcc0.ɵɵinject(HttpHandler)); };\nHttpClient.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HttpClient, factory: HttpClient.ɵfac });\n/** @nocollapse */\nHttpClient.ctorParameters = () => [\n    { type: HttpHandler }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpClient, [{\n        type: Injectable\n    }], function () { return [{ type: HttpHandler }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpClient.prototype.handler;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/common/http/src/interceptor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Intercepts and handles an `HttpRequest` or `HttpResponse`.\n *\n * Most interceptors transform the outgoing request before passing it to the\n * next interceptor in the chain, by calling `next.handle(transformedReq)`.\n * An interceptor may transform the\n * response event stream as well, by applying additional RxJS operators on the stream\n * returned by `next.handle()`.\n *\n * More rarely, an interceptor may handle the request entirely,\n * and compose a new event stream instead of invoking `next.handle()`. This is an\n * acceptable behavior, but keep in mind that further interceptors will be skipped entirely.\n *\n * It is also rare but valid for an interceptor to return multiple responses on the\n * event stream for a single request.\n *\n * \\@publicApi\n *\n * @see [HTTP Guide](guide/http#intercepting-requests-and-responses)\n *\n * \\@usageNotes\n *\n * To use the same instance of `HttpInterceptors` for the entire app, import the `HttpClientModule`\n * only in your `AppModule`, and add the interceptors to the root application injector .\n * If you import `HttpClientModule` multiple times across different modules (for example, in lazy\n * loading modules), each import creates a new copy of the `HttpClientModule`, which overwrites the interceptors\n * provided in the root module.\n *\n * @record\n */\nfunction HttpInterceptor() { }\nif (false) {\n    /**\n     * Identifies and handles a given HTTP request.\n     * @param {?} req The outgoing request object to handle.\n     * @param {?} next The next interceptor in the chain, or the backend\n     * if no interceptors remain in the chain.\n     * @return {?} An observable of the event stream.\n     */\n    HttpInterceptor.prototype.intercept = function (req, next) { };\n}\n/**\n * `HttpHandler` which applies an `HttpInterceptor` to an `HttpRequest`.\n *\n *\n */\nclass HttpInterceptorHandler {\n    /**\n     * @param {?} next\n     * @param {?} interceptor\n     */\n    constructor(next, interceptor) {\n        this.next = next;\n        this.interceptor = interceptor;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    handle(req) {\n        return this.interceptor.intercept(req, this.next);\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpInterceptorHandler.prototype.next;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpInterceptorHandler.prototype.interceptor;\n}\n/**\n * A multi-provider token that represents the array of registered\n * `HttpInterceptor` objects.\n *\n * \\@publicApi\n * @type {?}\n */\nconst HTTP_INTERCEPTORS = new InjectionToken('HTTP_INTERCEPTORS');\nclass NoopInterceptor {\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    intercept(req, next) {\n        return next.handle(req);\n    }\n}\nNoopInterceptor.ɵfac = function NoopInterceptor_Factory(t) { return new (t || NoopInterceptor)(); };\nNoopInterceptor.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NoopInterceptor, factory: NoopInterceptor.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NoopInterceptor, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/common/http/src/jsonp.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Every request made through JSONP needs a callback name that's unique across the\n// whole page. Each request is assigned an id and the callback name is constructed\n// from that. The next id to be assigned is tracked in a global variable here that\n// is shared among all applications on the page.\n/** @type {?} */\nlet nextRequestId = 0;\n// Error text given when a JSONP script is injected, but doesn't invoke the callback\n// passed in its URL.\n/** @type {?} */\nconst JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n// Error text given when a request is passed to the JsonpClientBackend that doesn't\n// have a request method JSONP.\n/** @type {?} */\nconst JSONP_ERR_WRONG_METHOD = 'JSONP requests must use JSONP request method.';\n/** @type {?} */\nconst JSONP_ERR_WRONG_RESPONSE_TYPE = 'JSONP requests must use Json response type.';\n/**\n * DI token/abstract type representing a map of JSONP callbacks.\n *\n * In the browser, this should always be the `window` object.\n *\n *\n * @abstract\n */\nclass JsonpCallbackContext {\n}\n/**\n * Processes an `HttpRequest` with the JSONP method,\n * by performing JSONP style requests.\n * @see `HttpHandler`\n * @see `HttpXhrBackend`\n *\n * \\@publicApi\n */\nclass JsonpClientBackend {\n    /**\n     * @param {?} callbackMap\n     * @param {?} document\n     */\n    constructor(callbackMap, document) {\n        this.callbackMap = callbackMap;\n        this.document = document;\n    }\n    /**\n     * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n     * @private\n     * @return {?}\n     */\n    nextCallback() { return `ng_jsonp_callback_${nextRequestId++}`; }\n    /**\n     * Processes a JSONP request and returns an event stream of the results.\n     * @param {?} req The request object.\n     * @return {?} An observable of the response events.\n     *\n     */\n    handle(req) {\n        // Firstly, check both the method and response type. If either doesn't match\n        // then the request was improperly routed here and cannot be handled.\n        if (req.method !== 'JSONP') {\n            throw new Error(JSONP_ERR_WRONG_METHOD);\n        }\n        else if (req.responseType !== 'json') {\n            throw new Error(JSONP_ERR_WRONG_RESPONSE_TYPE);\n        }\n        // Everything else happens inside the Observable boundary.\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            // The first step to make a request is to generate the callback name, and replace the\n            // callback placeholder in the URL with the name. Care has to be taken here to ensure\n            // a trailing &, if matched, gets inserted back into the URL in the correct place.\n            /** @type {?} */\n            const callback = this.nextCallback();\n            /** @type {?} */\n            const url = req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, `=${callback}$1`);\n            // Construct the <script> tag and point it at the URL.\n            /** @type {?} */\n            const node = this.document.createElement('script');\n            node.src = url;\n            // A JSONP request requires waiting for multiple callbacks. These variables\n            // are closed over and track state across those callbacks.\n            // The response object, if one has been received, or null otherwise.\n            /** @type {?} */\n            let body = null;\n            // Whether the response callback has been called.\n            /** @type {?} */\n            let finished = false;\n            // Whether the request has been cancelled (and thus any other callbacks)\n            // should be ignored.\n            /** @type {?} */\n            let cancelled = false;\n            // Set the response callback in this.callbackMap (which will be the window\n            // object in the browser. The script being loaded via the <script> tag will\n            // eventually call this callback.\n            this.callbackMap[callback] = (/**\n             * @param {?=} data\n             * @return {?}\n             */\n            (data) => {\n                // Data has been received from the JSONP script. Firstly, delete this callback.\n                delete this.callbackMap[callback];\n                // Next, make sure the request wasn't cancelled in the meantime.\n                if (cancelled) {\n                    return;\n                }\n                // Set state to indicate data was received.\n                body = data;\n                finished = true;\n            });\n            // cleanup() is a utility closure that removes the <script> from the page and\n            // the response callback from the window. This logic is used in both the\n            // success, error, and cancellation paths, so it's extracted out for convenience.\n            /** @type {?} */\n            const cleanup = (/**\n             * @return {?}\n             */\n            () => {\n                // Remove the <script> tag if it's still on the page.\n                if (node.parentNode) {\n                    node.parentNode.removeChild(node);\n                }\n                // Remove the response callback from the callbackMap (window object in the\n                // browser).\n                delete this.callbackMap[callback];\n            });\n            // onLoad() is the success callback which runs after the response callback\n            // if the JSONP script loads successfully. The event itself is unimportant.\n            // If something went wrong, onLoad() may run without the response callback\n            // having been invoked.\n            /** @type {?} */\n            const onLoad = (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                // Do nothing if the request has been cancelled.\n                if (cancelled) {\n                    return;\n                }\n                // Cleanup the page.\n                cleanup();\n                // Check whether the response callback has run.\n                if (!finished) {\n                    // It hasn't, something went wrong with the request. Return an error via\n                    // the Observable error path. All JSONP errors have status 0.\n                    observer.error(new HttpErrorResponse({\n                        url,\n                        status: 0,\n                        statusText: 'JSONP Error',\n                        error: new Error(JSONP_ERR_NO_CALLBACK),\n                    }));\n                    return;\n                }\n                // Success. body either contains the response body or null if none was\n                // returned.\n                observer.next(new HttpResponse({\n                    body,\n                    status: 200,\n                    statusText: 'OK', url,\n                }));\n                // Complete the stream, the response is over.\n                observer.complete();\n            });\n            // onError() is the error callback, which runs if the script returned generates\n            // a Javascript error. It emits the error via the Observable error channel as\n            // a HttpErrorResponse.\n            /** @type {?} */\n            const onError = (/**\n             * @param {?} error\n             * @return {?}\n             */\n            (error) => {\n                // If the request was already cancelled, no need to emit anything.\n                if (cancelled) {\n                    return;\n                }\n                cleanup();\n                // Wrap the error in a HttpErrorResponse.\n                observer.error(new HttpErrorResponse({\n                    error,\n                    status: 0,\n                    statusText: 'JSONP Error', url,\n                }));\n            });\n            // Subscribe to both the success (load) and error events on the <script> tag,\n            // and add it to the page.\n            node.addEventListener('load', onLoad);\n            node.addEventListener('error', onError);\n            this.document.body.appendChild(node);\n            // The request has now been successfully sent.\n            observer.next({ type: HttpEventType.Sent });\n            // Cancellation handler.\n            return (/**\n             * @return {?}\n             */\n            () => {\n                // Track the cancellation so event listeners won't do anything even if already scheduled.\n                cancelled = true;\n                // Remove the event listeners so they won't run if the events later fire.\n                node.removeEventListener('load', onLoad);\n                node.removeEventListener('error', onError);\n                // And finally, clean up the page.\n                cleanup();\n            });\n        }));\n    }\n}\nJsonpClientBackend.ɵfac = function JsonpClientBackend_Factory(t) { return new (t || JsonpClientBackend)(ɵngcc0.ɵɵinject(JsonpCallbackContext), ɵngcc0.ɵɵinject(DOCUMENT)); };\nJsonpClientBackend.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: JsonpClientBackend, factory: JsonpClientBackend.ɵfac });\n/** @nocollapse */\nJsonpClientBackend.ctorParameters = () => [\n    { type: JsonpCallbackContext },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JsonpClientBackend, [{\n        type: Injectable\n    }], function () { return [{ type: JsonpCallbackContext }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    JsonpClientBackend.prototype.callbackMap;\n    /**\n     * @type {?}\n     * @private\n     */\n    JsonpClientBackend.prototype.document;\n}\n/**\n * Identifies requests with the method JSONP and\n * shifts them to the `JsonpClientBackend`.\n *\n * @see `HttpInterceptor`\n *\n * \\@publicApi\n */\nclass JsonpInterceptor {\n    /**\n     * @param {?} jsonp\n     */\n    constructor(jsonp) {\n        this.jsonp = jsonp;\n    }\n    /**\n     * Identifies and handles a given JSONP request.\n     * @param {?} req The outgoing request object to handle.\n     * @param {?} next The next interceptor in the chain, or the backend\n     * if no interceptors remain in the chain.\n     * @return {?} An observable of the event stream.\n     */\n    intercept(req, next) {\n        if (req.method === 'JSONP') {\n            return this.jsonp.handle((/** @type {?} */ (req)));\n        }\n        // Fall through for normal HTTP requests.\n        return next.handle(req);\n    }\n}\nJsonpInterceptor.ɵfac = function JsonpInterceptor_Factory(t) { return new (t || JsonpInterceptor)(ɵngcc0.ɵɵinject(JsonpClientBackend)); };\nJsonpInterceptor.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: JsonpInterceptor, factory: JsonpInterceptor.ɵfac });\n/** @nocollapse */\nJsonpInterceptor.ctorParameters = () => [\n    { type: JsonpClientBackend }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JsonpInterceptor, [{\n        type: Injectable\n    }], function () { return [{ type: JsonpClientBackend }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    JsonpInterceptor.prototype.jsonp;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/common/http/src/xhr.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Determine an appropriate URL for the response, by checking either\n * XMLHttpRequest.responseURL or the X-Request-URL header.\n * @param {?} xhr\n * @return {?}\n */\nfunction getResponseUrl(xhr) {\n    if ('responseURL' in xhr && xhr.responseURL) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n/**\n * A wrapper around the `XMLHttpRequest` constructor.\n *\n * \\@publicApi\n * @abstract\n */\nclass XhrFactory {\n}\nif (false) {\n    /**\n     * @abstract\n     * @return {?}\n     */\n    XhrFactory.prototype.build = function () { };\n}\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n *\n */\nclass BrowserXhr {\n    constructor() {\n    }\n    /**\n     * @return {?}\n     */\n    build() { return (/** @type {?} */ ((new XMLHttpRequest()))); }\n}\nBrowserXhr.ɵfac = function BrowserXhr_Factory(t) { return new (t || BrowserXhr)(); };\nBrowserXhr.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: BrowserXhr, factory: BrowserXhr.ɵfac });\n/** @nocollapse */\nBrowserXhr.ctorParameters = () => [];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BrowserXhr, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n/**\n * Tracks a response from the server that does not yet have a body.\n * @record\n */\nfunction PartialResponse() { }\nif (false) {\n    /** @type {?} */\n    PartialResponse.prototype.headers;\n    /** @type {?} */\n    PartialResponse.prototype.status;\n    /** @type {?} */\n    PartialResponse.prototype.statusText;\n    /** @type {?} */\n    PartialResponse.prototype.url;\n}\n/**\n * Uses `XMLHttpRequest` to send requests to a backend server.\n * @see `HttpHandler`\n * @see `JsonpClientBackend`\n *\n * \\@publicApi\n */\nclass HttpXhrBackend {\n    /**\n     * @param {?} xhrFactory\n     */\n    constructor(xhrFactory) {\n        this.xhrFactory = xhrFactory;\n    }\n    /**\n     * Processes a request and returns a stream of response events.\n     * @param {?} req The request object.\n     * @return {?} An observable of the response events.\n     */\n    handle(req) {\n        // Quick check to give a better error message when a user attempts to use\n        // HttpClient.jsonp() without installing the JsonpClientModule\n        if (req.method === 'JSONP') {\n            throw new Error(`Attempted to construct Jsonp request without JsonpClientModule installed.`);\n        }\n        // Everything happens on Observable subscription.\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            // Start by setting up the XHR object with request method, URL, and withCredentials flag.\n            /** @type {?} */\n            const xhr = this.xhrFactory.build();\n            xhr.open(req.method, req.urlWithParams);\n            if (!!req.withCredentials) {\n                xhr.withCredentials = true;\n            }\n            // Add all the requested headers.\n            req.headers.forEach((/**\n             * @param {?} name\n             * @param {?} values\n             * @return {?}\n             */\n            (name, values) => xhr.setRequestHeader(name, values.join(','))));\n            // Add an Accept header if one isn't present already.\n            if (!req.headers.has('Accept')) {\n                xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');\n            }\n            // Auto-detect the Content-Type header if one isn't present already.\n            if (!req.headers.has('Content-Type')) {\n                /** @type {?} */\n                const detectedType = req.detectContentTypeHeader();\n                // Sometimes Content-Type detection fails.\n                if (detectedType !== null) {\n                    xhr.setRequestHeader('Content-Type', detectedType);\n                }\n            }\n            // Set the responseType if one was requested.\n            if (req.responseType) {\n                /** @type {?} */\n                const responseType = req.responseType.toLowerCase();\n                // JSON responses need to be processed as text. This is because if the server\n                // returns an XSSI-prefixed JSON response, the browser will fail to parse it,\n                // xhr.response will be null, and xhr.responseText cannot be accessed to\n                // retrieve the prefixed JSON data in order to strip the prefix. Thus, all JSON\n                // is parsed by first requesting text and then applying JSON.parse.\n                xhr.responseType = (/** @type {?} */ (((responseType !== 'json') ? responseType : 'text')));\n            }\n            // Serialize the request body if one is present. If not, this will be set to null.\n            /** @type {?} */\n            const reqBody = req.serializeBody();\n            // If progress events are enabled, response headers will be delivered\n            // in two events - the HttpHeaderResponse event and the full HttpResponse\n            // event. However, since response headers don't change in between these\n            // two events, it doesn't make sense to parse them twice. So headerResponse\n            // caches the data extracted from the response whenever it's first parsed,\n            // to ensure parsing isn't duplicated.\n            /** @type {?} */\n            let headerResponse = null;\n            // partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest\n            // state, and memoizes it into headerResponse.\n            /** @type {?} */\n            const partialFromXhr = (/**\n             * @return {?}\n             */\n            () => {\n                if (headerResponse !== null) {\n                    return headerResponse;\n                }\n                // Read status and normalize an IE9 bug (http://bugs.jquery.com/ticket/1450).\n                /** @type {?} */\n                const status = xhr.status === 1223 ? 204 : xhr.status;\n                /** @type {?} */\n                const statusText = xhr.statusText || 'OK';\n                // Parse headers from XMLHttpRequest - this step is lazy.\n                /** @type {?} */\n                const headers = new HttpHeaders(xhr.getAllResponseHeaders());\n                // Read the response URL from the XMLHttpResponse instance and fall back on the\n                // request URL.\n                /** @type {?} */\n                const url = getResponseUrl(xhr) || req.url;\n                // Construct the HttpHeaderResponse and memoize it.\n                headerResponse = new HttpHeaderResponse({ headers, status, statusText, url });\n                return headerResponse;\n            });\n            // Next, a few closures are defined for the various events which XMLHttpRequest can\n            // emit. This allows them to be unregistered as event listeners later.\n            // First up is the load event, which represents a response being fully available.\n            /** @type {?} */\n            const onLoad = (/**\n             * @return {?}\n             */\n            () => {\n                // Read response state from the memoized partial data.\n                let { headers, status, statusText, url } = partialFromXhr();\n                // The body will be read out if present.\n                /** @type {?} */\n                let body = null;\n                if (status !== 204) {\n                    // Use XMLHttpRequest.response if set, responseText otherwise.\n                    body = (typeof xhr.response === 'undefined') ? xhr.responseText : xhr.response;\n                }\n                // Normalize another potential bug (this one comes from CORS).\n                if (status === 0) {\n                    status = !!body ? 200 : 0;\n                }\n                // ok determines whether the response will be transmitted on the event or\n                // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n                // but a successful status code can still result in an error if the user\n                // asked for JSON data and the body cannot be parsed as such.\n                /** @type {?} */\n                let ok = status >= 200 && status < 300;\n                // Check whether the body needs to be parsed as JSON (in many cases the browser\n                // will have done that already).\n                if (req.responseType === 'json' && typeof body === 'string') {\n                    // Save the original body, before attempting XSSI prefix stripping.\n                    /** @type {?} */\n                    const originalBody = body;\n                    body = body.replace(XSSI_PREFIX, '');\n                    try {\n                        // Attempt the parse. If it fails, a parse error should be delivered to the user.\n                        body = body !== '' ? JSON.parse(body) : null;\n                    }\n                    catch (error) {\n                        // Since the JSON.parse failed, it's reasonable to assume this might not have been a\n                        // JSON response. Restore the original body (including any XSSI prefix) to deliver\n                        // a better error response.\n                        body = originalBody;\n                        // If this was an error request to begin with, leave it as a string, it probably\n                        // just isn't JSON. Otherwise, deliver the parsing error to the user.\n                        if (ok) {\n                            // Even though the response status was 2xx, this is still an error.\n                            ok = false;\n                            // The parse error contains the text of the body that failed to parse.\n                            body = (/** @type {?} */ ({ error, text: body }));\n                        }\n                    }\n                }\n                if (ok) {\n                    // A successful response is delivered on the event stream.\n                    observer.next(new HttpResponse({\n                        body,\n                        headers,\n                        status,\n                        statusText,\n                        url: url || undefined,\n                    }));\n                    // The full body has been received and delivered, no further events\n                    // are possible. This request is complete.\n                    observer.complete();\n                }\n                else {\n                    // An unsuccessful request is delivered on the error channel.\n                    observer.error(new HttpErrorResponse({\n                        // The error in this case is the response body (error from the server).\n                        error: body,\n                        headers,\n                        status,\n                        statusText,\n                        url: url || undefined,\n                    }));\n                }\n            });\n            // The onError callback is called when something goes wrong at the network level.\n            // Connection timeout, DNS error, offline, etc. These are actual errors, and are\n            // transmitted on the error channel.\n            /** @type {?} */\n            const onError = (/**\n             * @param {?} error\n             * @return {?}\n             */\n            (error) => {\n                const { url } = partialFromXhr();\n                /** @type {?} */\n                const res = new HttpErrorResponse({\n                    error,\n                    status: xhr.status || 0,\n                    statusText: xhr.statusText || 'Unknown Error',\n                    url: url || undefined,\n                });\n                observer.error(res);\n            });\n            // The sentHeaders flag tracks whether the HttpResponseHeaders event\n            // has been sent on the stream. This is necessary to track if progress\n            // is enabled since the event will be sent on only the first download\n            // progerss event.\n            /** @type {?} */\n            let sentHeaders = false;\n            // The download progress event handler, which is only registered if\n            // progress events are enabled.\n            /** @type {?} */\n            const onDownProgress = (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                // Send the HttpResponseHeaders event if it hasn't been sent already.\n                if (!sentHeaders) {\n                    observer.next(partialFromXhr());\n                    sentHeaders = true;\n                }\n                // Start building the download progress event to deliver on the response\n                // event stream.\n                /** @type {?} */\n                let progressEvent = {\n                    type: HttpEventType.DownloadProgress,\n                    loaded: event.loaded,\n                };\n                // Set the total number of bytes in the event if it's available.\n                if (event.lengthComputable) {\n                    progressEvent.total = event.total;\n                }\n                // If the request was for text content and a partial response is\n                // available on XMLHttpRequest, include it in the progress event\n                // to allow for streaming reads.\n                if (req.responseType === 'text' && !!xhr.responseText) {\n                    progressEvent.partialText = xhr.responseText;\n                }\n                // Finally, fire the event.\n                observer.next(progressEvent);\n            });\n            // The upload progress event handler, which is only registered if\n            // progress events are enabled.\n            /** @type {?} */\n            const onUpProgress = (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                // Upload progress events are simpler. Begin building the progress\n                // event.\n                /** @type {?} */\n                let progress = {\n                    type: HttpEventType.UploadProgress,\n                    loaded: event.loaded,\n                };\n                // If the total number of bytes being uploaded is available, include\n                // it.\n                if (event.lengthComputable) {\n                    progress.total = event.total;\n                }\n                // Send the event.\n                observer.next(progress);\n            });\n            // By default, register for load and error events.\n            xhr.addEventListener('load', onLoad);\n            xhr.addEventListener('error', onError);\n            // Progress events are only enabled if requested.\n            if (req.reportProgress) {\n                // Download progress is always enabled if requested.\n                xhr.addEventListener('progress', onDownProgress);\n                // Upload progress depends on whether there is a body to upload.\n                if (reqBody !== null && xhr.upload) {\n                    xhr.upload.addEventListener('progress', onUpProgress);\n                }\n            }\n            // Fire the request, and notify the event stream that it was fired.\n            xhr.send((/** @type {?} */ (reqBody)));\n            observer.next({ type: HttpEventType.Sent });\n            // This is the return from the Observable function, which is the\n            // request cancellation handler.\n            return (/**\n             * @return {?}\n             */\n            () => {\n                // On a cancellation, remove all registered event listeners.\n                xhr.removeEventListener('error', onError);\n                xhr.removeEventListener('load', onLoad);\n                if (req.reportProgress) {\n                    xhr.removeEventListener('progress', onDownProgress);\n                    if (reqBody !== null && xhr.upload) {\n                        xhr.upload.removeEventListener('progress', onUpProgress);\n                    }\n                }\n                // Finally, abort the in-flight request.\n                xhr.abort();\n            });\n        }));\n    }\n}\nHttpXhrBackend.ɵfac = function HttpXhrBackend_Factory(t) { return new (t || HttpXhrBackend)(ɵngcc0.ɵɵinject(XhrFactory)); };\nHttpXhrBackend.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HttpXhrBackend, factory: HttpXhrBackend.ɵfac });\n/** @nocollapse */\nHttpXhrBackend.ctorParameters = () => [\n    { type: XhrFactory }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpXhrBackend, [{\n        type: Injectable\n    }], function () { return [{ type: XhrFactory }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXhrBackend.prototype.xhrFactory;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/common/http/src/xsrf.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst XSRF_COOKIE_NAME = new InjectionToken('XSRF_COOKIE_NAME');\n/** @type {?} */\nconst XSRF_HEADER_NAME = new InjectionToken('XSRF_HEADER_NAME');\n/**\n * Retrieves the current XSRF token to use with the next outgoing request.\n *\n * \\@publicApi\n * @abstract\n */\nclass HttpXsrfTokenExtractor {\n}\nif (false) {\n    /**\n     * Get the XSRF token to use with an outgoing request.\n     *\n     * Will be called for every request, so the token may change between requests.\n     * @abstract\n     * @return {?}\n     */\n    HttpXsrfTokenExtractor.prototype.getToken = function () { };\n}\n/**\n * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.\n */\nclass HttpXsrfCookieExtractor {\n    /**\n     * @param {?} doc\n     * @param {?} platform\n     * @param {?} cookieName\n     */\n    constructor(doc, platform, cookieName) {\n        this.doc = doc;\n        this.platform = platform;\n        this.cookieName = cookieName;\n        this.lastCookieString = '';\n        this.lastToken = null;\n        /**\n         * \\@internal for testing\n         */\n        this.parseCount = 0;\n    }\n    /**\n     * @return {?}\n     */\n    getToken() {\n        if (this.platform === 'server') {\n            return null;\n        }\n        /** @type {?} */\n        const cookieString = this.doc.cookie || '';\n        if (cookieString !== this.lastCookieString) {\n            this.parseCount++;\n            this.lastToken = ɵparseCookieValue(cookieString, this.cookieName);\n            this.lastCookieString = cookieString;\n        }\n        return this.lastToken;\n    }\n}\nHttpXsrfCookieExtractor.ɵfac = function HttpXsrfCookieExtractor_Factory(t) { return new (t || HttpXsrfCookieExtractor)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(XSRF_COOKIE_NAME)); };\nHttpXsrfCookieExtractor.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HttpXsrfCookieExtractor, factory: HttpXsrfCookieExtractor.ɵfac });\n/** @nocollapse */\nHttpXsrfCookieExtractor.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: String, decorators: [{ type: Inject, args: [XSRF_COOKIE_NAME,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpXsrfCookieExtractor, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: String, decorators: [{\n                type: Inject,\n                args: [XSRF_COOKIE_NAME]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXsrfCookieExtractor.prototype.lastCookieString;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXsrfCookieExtractor.prototype.lastToken;\n    /**\n     * \\@internal for testing\n     * @type {?}\n     */\n    HttpXsrfCookieExtractor.prototype.parseCount;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXsrfCookieExtractor.prototype.doc;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXsrfCookieExtractor.prototype.platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXsrfCookieExtractor.prototype.cookieName;\n}\n/**\n * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.\n */\nclass HttpXsrfInterceptor {\n    /**\n     * @param {?} tokenService\n     * @param {?} headerName\n     */\n    constructor(tokenService, headerName) {\n        this.tokenService = tokenService;\n        this.headerName = headerName;\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    intercept(req, next) {\n        /** @type {?} */\n        const lcUrl = req.url.toLowerCase();\n        // Skip both non-mutating requests and absolute URLs.\n        // Non-mutating requests don't require a token, and absolute URLs require special handling\n        // anyway as the cookie set\n        // on our origin is not the same as the token expected by another origin.\n        if (req.method === 'GET' || req.method === 'HEAD' || lcUrl.startsWith('http://') ||\n            lcUrl.startsWith('https://')) {\n            return next.handle(req);\n        }\n        /** @type {?} */\n        const token = this.tokenService.getToken();\n        // Be careful not to overwrite an existing header of the same name.\n        if (token !== null && !req.headers.has(this.headerName)) {\n            req = req.clone({ headers: req.headers.set(this.headerName, token) });\n        }\n        return next.handle(req);\n    }\n}\nHttpXsrfInterceptor.ɵfac = function HttpXsrfInterceptor_Factory(t) { return new (t || HttpXsrfInterceptor)(ɵngcc0.ɵɵinject(HttpXsrfTokenExtractor), ɵngcc0.ɵɵinject(XSRF_HEADER_NAME)); };\nHttpXsrfInterceptor.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HttpXsrfInterceptor, factory: HttpXsrfInterceptor.ɵfac });\n/** @nocollapse */\nHttpXsrfInterceptor.ctorParameters = () => [\n    { type: HttpXsrfTokenExtractor },\n    { type: String, decorators: [{ type: Inject, args: [XSRF_HEADER_NAME,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpXsrfInterceptor, [{\n        type: Injectable\n    }], function () { return [{ type: HttpXsrfTokenExtractor }, { type: String, decorators: [{\n                type: Inject,\n                args: [XSRF_HEADER_NAME]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXsrfInterceptor.prototype.tokenService;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXsrfInterceptor.prototype.headerName;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/common/http/src/module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An injectable `HttpHandler` that applies multiple interceptors\n * to a request before passing it to the given `HttpBackend`.\n *\n * The interceptors are loaded lazily from the injector, to allow\n * interceptors to themselves inject classes depending indirectly\n * on `HttpInterceptingHandler` itself.\n * @see `HttpInterceptor`\n */\nclass HttpInterceptingHandler {\n    /**\n     * @param {?} backend\n     * @param {?} injector\n     */\n    constructor(backend, injector) {\n        this.backend = backend;\n        this.injector = injector;\n        this.chain = null;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    handle(req) {\n        if (this.chain === null) {\n            /** @type {?} */\n            const interceptors = this.injector.get(HTTP_INTERCEPTORS, []);\n            this.chain = interceptors.reduceRight((/**\n             * @param {?} next\n             * @param {?} interceptor\n             * @return {?}\n             */\n            (next, interceptor) => new HttpInterceptorHandler(next, interceptor)), this.backend);\n        }\n        return this.chain.handle(req);\n    }\n}\nHttpInterceptingHandler.ɵfac = function HttpInterceptingHandler_Factory(t) { return new (t || HttpInterceptingHandler)(ɵngcc0.ɵɵinject(HttpBackend), ɵngcc0.ɵɵinject(ɵngcc0.Injector)); };\nHttpInterceptingHandler.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HttpInterceptingHandler, factory: HttpInterceptingHandler.ɵfac });\n/** @nocollapse */\nHttpInterceptingHandler.ctorParameters = () => [\n    { type: HttpBackend },\n    { type: Injector }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpInterceptingHandler, [{\n        type: Injectable\n    }], function () { return [{ type: HttpBackend }, { type: ɵngcc0.Injector }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpInterceptingHandler.prototype.chain;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpInterceptingHandler.prototype.backend;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpInterceptingHandler.prototype.injector;\n}\n/**\n * Constructs an `HttpHandler` that applies interceptors\n * to a request before passing it to the given `HttpBackend`.\n *\n * Use as a factory function within `HttpClientModule`.\n *\n *\n * @param {?} backend\n * @param {?=} interceptors\n * @return {?}\n */\nfunction interceptingHandler(backend, interceptors = []) {\n    if (!interceptors) {\n        return backend;\n    }\n    return interceptors.reduceRight((/**\n     * @param {?} next\n     * @param {?} interceptor\n     * @return {?}\n     */\n    (next, interceptor) => new HttpInterceptorHandler(next, interceptor)), backend);\n}\n/**\n * Factory function that determines where to store JSONP callbacks.\n *\n * Ordinarily JSONP callbacks are stored on the `window` object, but this may not exist\n * in test environments. In that case, callbacks are stored on an anonymous object instead.\n *\n *\n * @return {?}\n */\nfunction jsonpCallbackContext() {\n    if (typeof window === 'object') {\n        return window;\n    }\n    return {};\n}\n/**\n * Configures XSRF protection support for outgoing requests.\n *\n * For a server that supports a cookie-based XSRF protection system,\n * use directly to configure XSRF protection with the correct\n * cookie and header names.\n *\n * If no names are supplied, the default cookie name is `XSRF-TOKEN`\n * and the default header name is `X-XSRF-TOKEN`.\n *\n * \\@publicApi\n */\nclass HttpClientXsrfModule {\n    /**\n     * Disable the default XSRF protection.\n     * @return {?}\n     */\n    static disable() {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                { provide: HttpXsrfInterceptor, useClass: NoopInterceptor },\n            ],\n        };\n    }\n    /**\n     * Configure XSRF protection.\n     * @param {?=} options An object that can specify either or both\n     * cookie name or header name.\n     * - Cookie name default is `XSRF-TOKEN`.\n     * - Header name default is `X-XSRF-TOKEN`.\n     *\n     * @return {?}\n     */\n    static withOptions(options = {}) {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                options.cookieName ? { provide: XSRF_COOKIE_NAME, useValue: options.cookieName } : [],\n                options.headerName ? { provide: XSRF_HEADER_NAME, useValue: options.headerName } : [],\n            ],\n        };\n    }\n}\nHttpClientXsrfModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: HttpClientXsrfModule });\nHttpClientXsrfModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function HttpClientXsrfModule_Factory(t) { return new (t || HttpClientXsrfModule)(); }, providers: [\n        HttpXsrfInterceptor,\n        { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n        { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n        { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n        { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n    ] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpClientXsrfModule, [{\n        type: NgModule,\n        args: [{\n                providers: [\n                    HttpXsrfInterceptor,\n                    { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n                    { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n                    { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n                    { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n                ]\n            }]\n    }], null, null); })();\n/**\n * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`\n * with supporting services for XSRF. Automatically imported by `HttpClientModule`.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.\n *\n * \\@publicApi\n */\nclass HttpClientModule {\n}\nHttpClientModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: HttpClientModule });\nHttpClientModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function HttpClientModule_Factory(t) { return new (t || HttpClientModule)(); }, providers: [\n        HttpClient,\n        { provide: HttpHandler, useClass: HttpInterceptingHandler },\n        HttpXhrBackend,\n        { provide: HttpBackend, useExisting: HttpXhrBackend },\n        BrowserXhr,\n        { provide: XhrFactory, useExisting: BrowserXhr },\n    ], imports: [[\n            HttpClientXsrfModule.withOptions({\n                cookieName: 'XSRF-TOKEN',\n                headerName: 'X-XSRF-TOKEN'\n            }),\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(HttpClientModule, { imports: [HttpClientXsrfModule] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpClientModule, [{\n        type: NgModule,\n        args: [{\n                /**\n                 * Optional configuration for XSRF protection.\n                 */\n                imports: [\n                    HttpClientXsrfModule.withOptions({\n                        cookieName: 'XSRF-TOKEN',\n                        headerName: 'X-XSRF-TOKEN'\n                    }),\n                ],\n                /**\n                 * Configures the [dependency injector](guide/glossary#injector) where it is imported\n                 * with supporting services for HTTP communications.\n                 */\n                providers: [\n                    HttpClient,\n                    { provide: HttpHandler, useClass: HttpInterceptingHandler },\n                    HttpXhrBackend,\n                    { provide: HttpBackend, useExisting: HttpXhrBackend },\n                    BrowserXhr,\n                    { provide: XhrFactory, useExisting: BrowserXhr },\n                ]\n            }]\n    }], null, null); })();\n/**\n * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`\n * with supporting services for JSONP.\n * Without this module, Jsonp requests reach the backend\n * with method JSONP, where they are rejected.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.\n *\n * \\@publicApi\n */\nclass HttpClientJsonpModule {\n}\nHttpClientJsonpModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: HttpClientJsonpModule });\nHttpClientJsonpModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function HttpClientJsonpModule_Factory(t) { return new (t || HttpClientJsonpModule)(); }, providers: [\n        JsonpClientBackend,\n        { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },\n        { provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true },\n    ] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpClientJsonpModule, [{\n        type: NgModule,\n        args: [{\n                providers: [\n                    JsonpClientBackend,\n                    { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },\n                    { provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true },\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/common/http/public_api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/common/http/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { HTTP_INTERCEPTORS, HttpBackend, HttpClient, HttpClientJsonpModule, HttpClientModule, HttpClientXsrfModule, HttpErrorResponse, HttpEventType, HttpHandler, HttpHeaderResponse, HttpHeaders, HttpParams, HttpRequest, HttpResponse, HttpResponseBase, HttpUrlEncodingCodec, HttpXhrBackend, HttpXsrfTokenExtractor, JsonpClientBackend, JsonpInterceptor, XhrFactory, HttpInterceptingHandler as ɵHttpInterceptingHandler, NoopInterceptor as ɵangular_packages_common_http_http_a, JsonpCallbackContext as ɵangular_packages_common_http_http_b, jsonpCallbackContext as ɵangular_packages_common_http_http_c, BrowserXhr as ɵangular_packages_common_http_http_d, XSRF_COOKIE_NAME as ɵangular_packages_common_http_http_e, XSRF_HEADER_NAME as ɵangular_packages_common_http_http_f, HttpXsrfCookieExtractor as ɵangular_packages_common_http_http_g, HttpXsrfInterceptor as ɵangular_packages_common_http_http_h };\n\n//# sourceMappingURL=http.js.map","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Student } from '../_models/student';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n\n  constructor( private httpClinet: HttpClient) { }\n  getAllStudent(): Observable<Student[]>{\n    return this.httpClinet.get<any>(environment.baseUrl+'admin/student');\n  }\n}\n","import { Routes, RouterModule } from \"@angular/router\";\r\nimport { AdminComponent } from './admin.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { StudentComponent } from './student/student.component';\r\nimport { SubjectComponent } from './subject/subject.component';\r\nimport { QuestionComponent } from './question/question.component';\r\nimport { ExamComponent } from './exam/exam.component';\r\nimport { ExamlistComponent } from './examlist/examlist.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path:'',\r\n        component: AdminComponent,\r\n        children:[\r\n            {\r\n                path:'dashboard',\r\n                component: DashboardComponent\r\n            },\r\n            {\r\n                path:'student',\r\n                component: StudentComponent\r\n            },\r\n            {\r\n                path:'subject',\r\n                component: SubjectComponent\r\n            },\r\n            {\r\n                path:'question',\r\n                component: QuestionComponent\r\n            },\r\n            {\r\n                path:'exam',\r\n                component: ExamComponent\r\n            },\r\n            {\r\n                path:'examlist',\r\n                component:ExamlistComponent\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [CommonModule, RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AdminRoutingModule{}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"wrapper\">\n\n    <app-header></app-header>\n    <!-- Left side column. contains the logo and sidebar -->\n    <app-left-side></app-left-side>\n    <router-outlet></router-outlet>\n    <!-- Content Wrapper. Contains page content -->\n    <!-- /.content-wrapper -->\n    <app-footer></app-footer>\n\n    <!-- Control Sidebar -->\n    <app-control-sidebar></app-control-sidebar>\n    <!-- /.control-sidebar -->\n</div>","import { NgModule } from \"@angular/core\";\nimport { AdminComponent } from './admin.component';\nimport { HeaderComponent } from './layout/header/header.component';\nimport { FooterComponent } from './layout/footer/footer.component';\nimport { ContentComponent } from './layout/content/content.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ExamComponent } from './exam/exam.component';\nimport { ExamlistComponent } from './examlist/examlist.component';\nimport { StudentComponent } from './student/student.component';\nimport { SubjectComponent } from './subject/subject.component';\nimport { CommonModule } from '@angular/common';\nimport { AdminRoutingModule } from './admin-routing.component';\nimport { ControlSidebarComponent } from './layout/control-sidebar/control-sidebar.component';\nimport { LeftSideComponent } from './layout/left-side/left-side.component';\n\n@NgModule({\n  imports:[\n    CommonModule,\n    AdminRoutingModule,\n  ],\n  declarations:[\n    AdminComponent,\n    HeaderComponent,\n    FooterComponent,\n    LeftSideComponent,\n    ControlSidebarComponent,\n    ContentComponent,\n    DashboardComponent,\n    ExamComponent,\n    ExamlistComponent,\n    StudentComponent,\n    SubjectComponent\n  ]\n})\nexport class AdminModule{}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<section class=\"content-header\">\n    <h1>\n        Dashboard\n        <small>Control panel</small>\n    </h1>\n    <ol class=\"breadcrumb\">\n        <li><a href=\"#\"><i class=\"fa fa-dashboard\"></i> Home</a></li>\n        <li class=\"active\">Dashboard</li>\n    </ol>\n</section>\n\n<!-- Main content -->\n<section class=\"content\">\n    <!-- Small boxes (Stat box) -->\n    <div class=\"row\">\n        <div class=\"col-lg-3 col-xs-6\">\n            <!-- small box -->\n            <div class=\"small-box bg-aqua\">\n                <div class=\"inner\">\n                    <h3>150</h3>\n\n                    <p>Môn Học</p>\n                </div>\n                <div class=\"icon\">\n                    <i class=\"fa fa-book\"></i>\n                </div>\n                <a class=\"small-box-footer\">Chi Tiết  <i class=\"fa fa-arrow-circle-right\"></i></a>\n            </div>\n        </div>\n        <!-- ./col -->\n        <div class=\"col-lg-3 col-xs-6\">\n            <!-- small box -->\n            <div class=\"small-box bg-green\">\n                <div class=\"inner\">\n                    <h3>53<sup style=\"font-size: 20px\">%</sup></h3>\n\n                    <p>Học Sinh</p>\n                </div>\n                <div class=\"icon\">\n                    <i class=\"fa fa-group\"></i>\n                </div>\n                <a class=\"small-box-footer\">Chi Tiết <i class=\"fa fa-arrow-circle-right\"></i></a>\n            </div>\n        </div>\n        <!-- ./col -->\n        <div class=\"col-lg-3 col-xs-6\">\n            <!-- small box -->\n            <div class=\"small-box bg-yellow\">\n                <div class=\"inner\">\n                    <h3>44</h3>\n\n                    <p>Câu Hỏi</p>\n                </div>\n                <div class=\"icon\">\n                    <i class=\"fa fa-question-circle\"></i>\n                </div>\n                <a class=\"small-box-footer\">Chi Tiết <i class=\"fa fa-arrow-circle-right\"></i></a>\n            </div>\n        </div>\n        <!-- ./col -->\n        <div class=\"col-lg-3 col-xs-6\">\n            <!-- small box -->\n            <div class=\"small-box bg-red\">\n                <div class=\"inner\">\n                    <h3>65</h3>\n\n                    <p>Đề Thi</p>\n                </div>\n                <div class=\"icon\">\n                    <i class=\"fa fa-file\"></i>\n                </div>\n                <a class=\"small-box-footer\">Chi Tiết<i class=\"fa fa-arrow-circle-right\"></i></a>\n            </div>\n        </div>\n        <!-- ./col -->\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-exam',\n  templateUrl: './exam.component.html',\n  styleUrls: ['./exam.component.css']\n})\nexport class ExamComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<!-- Content Header (Page header) -->\n<section class=\"content-header\">\n    <h1>\n        Thi\n        <small></small>\n    </h1>\n    <ol class=\"breadcrumb\">\n        <li><a href=\"#\"><i class=\"fa fa-dashboard\"></i> Home</a></li>\n        <li><a href=\"#\">Thi</a></li>\n        <li class=\"active\">Danh sách đề thi</li>\n    </ol>\n</section>\n\n<!-- Main content -->\n<section class=\"content\">\n    <div class=\"row\">\n        <div class=\"col-xs-12\">\n            <div class=\"box box-primary\">\n                <div class=\"box-header\" style=\"text-align: aligin; height: 50px;line-height: 50px;white-space: nowrap;\">\n                    <h2 class=\"box-title\">Danh sách đề thi</h2>\n                    <div class=\"pull-right\">\n                        <a class=\"btn btn-app\"> <i class=\"fa  fa-plus\"></i> Thêm mới</a>\n                    </div>\n                </div>\n                <!-- /.box-header -->\n                <div class=\"box-body\">\n                    <table id=\"example1\" class=\"table table-bordered table-striped\">\n                        <thead>\n                            <tr>\n                                <th>Rendering engine</th>\n                                <th>Browser</th>\n                                <th>Platform(s)</th>\n                                <th>Engine version</th>\n                                <th>CSS grade</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>Trident</td>\n                                <td>Internet Explorer 4.0\n                                </td>\n                                <td>Win 95+</td>\n                                <td> 4</td>\n                                <td>X</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                <!-- /.box-body -->\n            </div>\n            <!-- /.box -->\n        </div>\n        <!-- /.col -->\n    </div>\n    <!-- /.row -->\n</section>\n<!-- /.content -->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-examlist',\n  templateUrl: './examlist.component.html',\n  styleUrls: ['./examlist.component.css']\n})\nexport class ExamlistComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<!-- Content Header (Page header) -->\n<section class=\"content-header\">\n    <h1>\n        Thi\n        <small></small>\n    </h1>\n    <ol class=\"breadcrumb\">\n        <li><a href=\"#\"><i class=\"fa fa-dashboard\"></i> Home</a></li>\n        <li><a href=\"#\">Thi</a></li>\n        <li class=\"active\">Danh sách thi</li>\n    </ol>\n</section>\n\n<!-- Main content -->\n<section class=\"content\">\n    <div class=\"row\">\n        <div class=\"col-xs-12\">\n            <div class=\"box box-primary\">\n                <div class=\"box-header\" style=\"text-align:cenetr; height: 50px;line-height: 50px;white-space: nowrap;\">\n                    <h2 class=\"box-title\">Danh sách thi</h2>\n                    <div class=\"pull-right\">\n                        <a class=\"btn btn-app\"> <i class=\"fa  fa-plus\"></i> Thêm mới</a>\n                    </div>\n                </div>\n                <!-- /.box-header -->\n                <div class=\"box-body\">\n                    <table id=\"example1\" class=\"table table-bordered table-striped\">\n                        <thead>\n                            <tr>\n                                <th>Rendering engine</th>\n                                <th>Browser</th>\n                                <th>Platform(s)</th>\n                                <th>Engine version</th>\n                                <th>CSS grade</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>Trident</td>\n                                <td>Internet Explorer 4.0\n                                </td>\n                                <td>Win 95+</td>\n                                <td> 4</td>\n                                <td>X</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                <!-- /.box-body -->\n            </div>\n            <!-- /.box -->\n        </div>\n        <!-- /.col -->\n    </div>\n    <!-- /.row -->\n</section>\n<!-- /.content -->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.css']\n})\nexport class ContentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<section class=\"content-header\">\n    <h1>\n        Dashboard\n        <small>Control panel</small>\n    </h1>\n    <ol class=\"breadcrumb\">\n        <li><a href=\"#\"><i class=\"fa fa-dashboard\"></i> Home</a></li>\n        <li class=\"active\">Dashboard</li>\n    </ol>\n</section>\n\n<!-- Main content -->\n<section class=\"content\">\n    <!-- Small boxes (Stat box) -->\n    <div class=\"row\">\n        <div class=\"col-lg-3 col-xs-6\">\n            <!-- small box -->\n            <div class=\"small-box bg-aqua\">\n                <div class=\"inner\">\n                    <h3>150</h3>\n\n                    <p>Môn Học</p>\n                </div>\n                <div class=\"icon\">\n                    <i class=\"fa fa-book\"></i>\n                </div>\n                <a class=\"small-box-footer\">Chi Tiết  <i class=\"fa fa-arrow-circle-right\"></i></a>\n            </div>\n        </div>\n        <!-- ./col -->\n        <div class=\"col-lg-3 col-xs-6\">\n            <!-- small box -->\n            <div class=\"small-box bg-green\">\n                <div class=\"inner\">\n                    <h3>53<sup style=\"font-size: 20px\">%</sup></h3>\n\n                    <p>Học Sinh</p>\n                </div>\n                <div class=\"icon\">\n                    <i class=\"fa fa-group\"></i>\n                </div>\n                <a class=\"small-box-footer\">Chi Tiết <i class=\"fa fa-arrow-circle-right\"></i></a>\n            </div>\n        </div>\n        <!-- ./col -->\n        <div class=\"col-lg-3 col-xs-6\">\n            <!-- small box -->\n            <div class=\"small-box bg-yellow\">\n                <div class=\"inner\">\n                    <h3>44</h3>\n\n                    <p>Câu Hỏi</p>\n                </div>\n                <div class=\"icon\">\n                    <i class=\"fa fa-question-circle\"></i>\n                </div>\n                <a class=\"small-box-footer\">Chi Tiết <i class=\"fa fa-arrow-circle-right\"></i></a>\n            </div>\n        </div>\n        <!-- ./col -->\n        <div class=\"col-lg-3 col-xs-6\">\n            <!-- small box -->\n            <div class=\"small-box bg-red\">\n                <div class=\"inner\">\n                    <h3>65</h3>\n\n                    <p>Đề Thi</p>\n                </div>\n                <div class=\"icon\">\n                    <i class=\"fa fa-file\"></i>\n                </div>\n                <a class=\"small-box-footer\">Chi Tiết<i class=\"fa fa-arrow-circle-right\"></i></a>\n            </div>\n        </div>\n        <!-- ./col -->\n    </div>\n    <!-- /.row -->\n    <!-- Main row -->\n    <div class=\"row\">\n        <!-- Left col -->\n        <section class=\"col-lg-7 connectedSortable\">\n            <!-- Custom tabs (Charts with tabs)-->\n            <div class=\"nav-tabs-custom\">\n                <!-- Tabs within a box -->\n                <ul class=\"nav nav-tabs pull-right\">\n                    <li class=\"active\"><a href=\"#revenue-chart\" data-toggle=\"tab\">Area</a></li>\n                    <li><a href=\"#sales-chart\" data-toggle=\"tab\">Donut</a></li>\n                    <li class=\"pull-left header\"><i class=\"fa fa-inbox\"></i> Sales</li>\n                </ul>\n                <div class=\"tab-content no-padding\">\n                    <!-- Morris chart - Sales -->\n                    <div class=\"chart tab-pane active\" id=\"revenue-chart\" style=\"position: relative; height: 300px;\"></div>\n                    <div class=\"chart tab-pane\" id=\"sales-chart\" style=\"position: relative; height: 300px;\"></div>\n                </div>\n            </div>\n            <!-- /.nav-tabs-custom -->\n\n            <!-- Chat box -->\n            <div class=\"box box-success\">\n                <div class=\"box-header\">\n                    <i class=\"fa fa-comments-o\"></i>\n\n                    <h3 class=\"box-title\">Chat</h3>\n\n                    <div class=\"box-tools pull-right\" data-toggle=\"tooltip\" title=\"Status\">\n                        <div class=\"btn-group\" data-toggle=\"btn-toggle\">\n                            <button type=\"button\" class=\"btn btn-default btn-sm active\"><i class=\"fa fa-square text-green\"></i>\n                </button>\n                            <button type=\"button\" class=\"btn btn-default btn-sm\"><i class=\"fa fa-square text-red\"></i></button>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"box-body chat\" id=\"chat-box\">\n                    <!-- chat item -->\n                    <div class=\"item\">\n                        <img src=\"public/admin/dist/img/user4-128x128.jpg\" alt=\"user image\" class=\"online\">\n\n                        <p class=\"message\">\n                            <a href=\"#\" class=\"name\">\n                                <small class=\"text-muted pull-right\"><i class=\"fa fa-clock-o\"></i> 2:15</small> Mike Doe\n                            </a>\n                            I would like to meet you to discuss the latest news about the arrival of the new theme. They say it is going to be one the best themes on the market\n                        </p>\n                        <div class=\"attachment\">\n                            <h4>Attachments:</h4>\n\n                            <p class=\"filename\">\n                                Theme-thumbnail-image.jpg\n                            </p>\n\n                            <div class=\"pull-right\">\n                                <button type=\"button\" class=\"btn btn-primary btn-sm btn-flat\">Open</button>\n                            </div>\n                        </div>\n                        <!-- /.attachment -->\n                    </div>\n                    <!-- /.item -->\n                    <!-- chat item -->\n                    <div class=\"item\">\n                        <img src=\"public/admin/dist/img/user3-128x128.jpg\" alt=\"user image\" class=\"offline\">\n\n                        <p class=\"message\">\n                            <a href=\"#\" class=\"name\">\n                                <small class=\"text-muted pull-right\"><i class=\"fa fa-clock-o\"></i> 5:15</small> Alexander Pierce\n                            </a>\n                            I would like to meet you to discuss the latest news about the arrival of the new theme. They say it is going to be one the best themes on the market\n                        </p>\n                    </div>\n                    <!-- /.item -->\n                    <!-- chat item -->\n                    <div class=\"item\">\n                        <img src=\"public/admin/dist/img/user2-160x160.jpg\" alt=\"user image\" class=\"offline\">\n\n                        <p class=\"message\">\n                            <a href=\"#\" class=\"name\">\n                                <small class=\"text-muted pull-right\"><i class=\"fa fa-clock-o\"></i> 5:30</small> Susan Doe\n                            </a>\n                            I would like to meet you to discuss the latest news about the arrival of the new theme. They say it is going to be one the best themes on the market\n                        </p>\n                    </div>\n                    <!-- /.item -->\n                </div>\n                <!-- /.chat -->\n                <div class=\"box-footer\">\n                    <div class=\"input-group\">\n                        <input class=\"form-control\" placeholder=\"Type message...\">\n\n                        <div class=\"input-group-btn\">\n                            <button type=\"button\" class=\"btn btn-success\"><i class=\"fa fa-plus\"></i></button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- /.box (chat box) -->\n\n            <!-- TO DO List -->\n            <div class=\"box box-primary\">\n                <div class=\"box-header\">\n                    <i class=\"ion ion-clipboard\"></i>\n\n                    <h3 class=\"box-title\">To Do List</h3>\n\n                    <div class=\"box-tools pull-right\">\n                        <ul class=\"pagination pagination-sm inline\">\n                            <li><a href=\"#\">&laquo;</a></li>\n                            <li><a href=\"#\">1</a></li>\n                            <li><a href=\"#\">2</a></li>\n                            <li><a href=\"#\">3</a></li>\n                            <li><a href=\"#\">&raquo;</a></li>\n                        </ul>\n                    </div>\n                </div>\n                <!-- /.box-header -->\n                <div class=\"box-body\">\n                    <!-- See dist/js/pages/dashboard.js to activate the todoList plugin -->\n                    <ul class=\"todo-list\">\n                        <li>\n                            <!-- drag handle -->\n                            <span class=\"handle\">\n                      <i class=\"fa fa-ellipsis-v\"></i>\n                      <i class=\"fa fa-ellipsis-v\"></i>\n                    </span>\n                            <!-- checkbox -->\n                            <input type=\"checkbox\" value=\"\">\n                            <!-- todo text -->\n                            <span class=\"text\">Design a nice theme</span>\n                            <!-- Emphasis label -->\n                            <small class=\"label label-danger\"><i class=\"fa fa-clock-o\"></i> 2 mins</small>\n                            <!-- General tools such as edit or delete-->\n                            <div class=\"tools\">\n                                <i class=\"fa fa-edit\"></i>\n                                <i class=\"fa fa-trash-o\"></i>\n                            </div>\n                        </li>\n                        <li>\n                            <span class=\"handle\">\n                      <i class=\"fa fa-ellipsis-v\"></i>\n                      <i class=\"fa fa-ellipsis-v\"></i>\n                    </span>\n                            <input type=\"checkbox\" value=\"\">\n                            <span class=\"text\">Make the theme responsive</span>\n                            <small class=\"label label-info\"><i class=\"fa fa-clock-o\"></i> 4 hours</small>\n                            <div class=\"tools\">\n                                <i class=\"fa fa-edit\"></i>\n                                <i class=\"fa fa-trash-o\"></i>\n                            </div>\n                        </li>\n                        <li>\n                            <span class=\"handle\">\n                      <i class=\"fa fa-ellipsis-v\"></i>\n                      <i class=\"fa fa-ellipsis-v\"></i>\n                    </span>\n                            <input type=\"checkbox\" value=\"\">\n                            <span class=\"text\">Let theme shine like a star</span>\n                            <small class=\"label label-warning\"><i class=\"fa fa-clock-o\"></i> 1 day</small>\n                            <div class=\"tools\">\n                                <i class=\"fa fa-edit\"></i>\n                                <i class=\"fa fa-trash-o\"></i>\n                            </div>\n                        </li>\n                        <li>\n                            <span class=\"handle\">\n                      <i class=\"fa fa-ellipsis-v\"></i>\n                      <i class=\"fa fa-ellipsis-v\"></i>\n                    </span>\n                            <input type=\"checkbox\" value=\"\">\n                            <span class=\"text\">Let theme shine like a star</span>\n                            <small class=\"label label-success\"><i class=\"fa fa-clock-o\"></i> 3 days</small>\n                            <div class=\"tools\">\n                                <i class=\"fa fa-edit\"></i>\n                                <i class=\"fa fa-trash-o\"></i>\n                            </div>\n                        </li>\n                        <li>\n                            <span class=\"handle\">\n                      <i class=\"fa fa-ellipsis-v\"></i>\n                      <i class=\"fa fa-ellipsis-v\"></i>\n                    </span>\n                            <input type=\"checkbox\" value=\"\">\n                            <span class=\"text\">Check your messages and notifications</span>\n                            <small class=\"label label-primary\"><i class=\"fa fa-clock-o\"></i> 1 week</small>\n                            <div class=\"tools\">\n                                <i class=\"fa fa-edit\"></i>\n                                <i class=\"fa fa-trash-o\"></i>\n                            </div>\n                        </li>\n                        <li>\n                            <span class=\"handle\">\n                      <i class=\"fa fa-ellipsis-v\"></i>\n                      <i class=\"fa fa-ellipsis-v\"></i>\n                    </span>\n                            <input type=\"checkbox\" value=\"\">\n                            <span class=\"text\">Let theme shine like a star</span>\n                            <small class=\"label label-default\"><i class=\"fa fa-clock-o\"></i> 1 month</small>\n                            <div class=\"tools\">\n                                <i class=\"fa fa-edit\"></i>\n                                <i class=\"fa fa-trash-o\"></i>\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n                <!-- /.box-body -->\n                <div class=\"box-footer clearfix no-border\">\n                    <button type=\"button\" class=\"btn btn-default pull-right\"><i class=\"fa fa-plus\"></i> Add item</button>\n                </div>\n            </div>\n            <!-- /.box -->\n\n            <!-- quick email widget -->\n            <div class=\"box box-info\">\n                <div class=\"box-header\">\n                    <i class=\"fa fa-envelope\"></i>\n\n                    <h3 class=\"box-title\">Quick Email</h3>\n                    <!-- tools box -->\n                    <div class=\"pull-right box-tools\">\n                        <button type=\"button\" class=\"btn btn-info btn-sm\" data-widget=\"remove\" data-toggle=\"tooltip\" title=\"Remove\">\n                <i class=\"fa fa-times\"></i></button>\n                    </div>\n                    <!-- /. tools -->\n                </div>\n                <div class=\"box-body\">\n                    <form action=\"#\" method=\"post\">\n                        <div class=\"form-group\">\n                            <input type=\"email\" class=\"form-control\" name=\"emailto\" placeholder=\"Email to:\">\n                        </div>\n                        <div class=\"form-group\">\n                            <input type=\"text\" class=\"form-control\" name=\"subject\" placeholder=\"Subject\">\n                        </div>\n                        <div>\n                            <textarea class=\"textarea\" placeholder=\"Message\" style=\"width: 100%; height: 125px; font-size: 14px; line-height: 18px; border: 1px solid #dddddd; padding: 10px;\"></textarea>\n                        </div>\n                    </form>\n                </div>\n                <div class=\"box-footer clearfix\">\n                    <button type=\"button\" class=\"pull-right btn btn-default\" id=\"sendEmail\">Send\n              <i class=\"fa fa-arrow-circle-right\"></i></button>\n                </div>\n            </div>\n\n        </section>\n        <!-- /.Left col -->\n        <!-- right col (We are only adding the ID to make the widgets sortable)-->\n        <section class=\"col-lg-5 connectedSortable\">\n\n            <!-- Map box -->\n            <div class=\"box box-solid bg-light-blue-gradient\">\n                <div class=\"box-header\">\n                    <!-- tools box -->\n                    <div class=\"pull-right box-tools\">\n                        <button type=\"button\" class=\"btn btn-primary btn-sm daterange pull-right\" data-toggle=\"tooltip\" title=\"Date range\">\n                <i class=\"fa fa-calendar\"></i></button>\n                        <button type=\"button\" class=\"btn btn-primary btn-sm pull-right\" data-widget=\"collapse\" data-toggle=\"tooltip\" title=\"Collapse\" style=\"margin-right: 5px;\">\n                <i class=\"fa fa-minus\"></i></button>\n                    </div>\n                    <!-- /. tools -->\n\n                    <i class=\"fa fa-map-marker\"></i>\n\n                    <h3 class=\"box-title\">\n                        Visitors\n                    </h3>\n                </div>\n                <div class=\"box-body\">\n                    <div id=\"world-map\" style=\"height: 250px; width: 100%;\"></div>\n                </div>\n                <!-- /.box-body-->\n                <div class=\"box-footer no-border\">\n                    <div class=\"row\">\n                        <div class=\"col-xs-4 text-center\" style=\"border-right: 1px solid #f4f4f4\">\n                            <div id=\"sparkline-1\"></div>\n                            <div class=\"knob-label\">Visitors</div>\n                        </div>\n                        <!-- ./col -->\n                        <div class=\"col-xs-4 text-center\" style=\"border-right: 1px solid #f4f4f4\">\n                            <div id=\"sparkline-2\"></div>\n                            <div class=\"knob-label\">Online</div>\n                        </div>\n                        <!-- ./col -->\n                        <div class=\"col-xs-4 text-center\">\n                            <div id=\"sparkline-3\"></div>\n                            <div class=\"knob-label\">Exists</div>\n                        </div>\n                        <!-- ./col -->\n                    </div>\n                    <!-- /.row -->\n                </div>\n            </div>\n            <!-- /.box -->\n\n            <!-- solid sales graph -->\n            <div class=\"box box-solid bg-teal-gradient\">\n                <div class=\"box-header\">\n                    <i class=\"fa fa-th\"></i>\n\n                    <h3 class=\"box-title\">Sales Graph</h3>\n\n                    <div class=\"box-tools pull-right\">\n                        <button type=\"button\" class=\"btn bg-teal btn-sm\" data-widget=\"collapse\"><i class=\"fa fa-minus\"></i>\n              </button>\n                        <button type=\"button\" class=\"btn bg-teal btn-sm\" data-widget=\"remove\"><i class=\"fa fa-times\"></i>\n              </button>\n                    </div>\n                </div>\n                <div class=\"box-body border-radius-none\">\n                    <div class=\"chart\" id=\"line-chart\" style=\"height: 250px;\"></div>\n                </div>\n                <!-- /.box-body -->\n                <div class=\"box-footer no-border\">\n                    <div class=\"row\">\n                        <div class=\"col-xs-4 text-center\" style=\"border-right: 1px solid #f4f4f4\">\n                            <input type=\"text\" class=\"knob\" data-readonly=\"true\" value=\"20\" data-width=\"60\" data-height=\"60\" data-fgColor=\"#39CCCC\">\n\n                            <div class=\"knob-label\">Mail-Orders</div>\n                        </div>\n                        <!-- ./col -->\n                        <div class=\"col-xs-4 text-center\" style=\"border-right: 1px solid #f4f4f4\">\n                            <input type=\"text\" class=\"knob\" data-readonly=\"true\" value=\"50\" data-width=\"60\" data-height=\"60\" data-fgColor=\"#39CCCC\">\n\n                            <div class=\"knob-label\">Online</div>\n                        </div>\n                        <!-- ./col -->\n                        <div class=\"col-xs-4 text-center\">\n                            <input type=\"text\" class=\"knob\" data-readonly=\"true\" value=\"30\" data-width=\"60\" data-height=\"60\" data-fgColor=\"#39CCCC\">\n\n                            <div class=\"knob-label\">In-Store</div>\n                        </div>\n                        <!-- ./col -->\n                    </div>\n                    <!-- /.row -->\n                </div>\n                <!-- /.box-footer -->\n            </div>\n            <!-- /.box -->\n\n            <!-- Calendar -->\n            <div class=\"box box-solid bg-green-gradient\">\n                <div class=\"box-header\">\n                    <i class=\"fa fa-calendar\"></i>\n\n                    <h3 class=\"box-title\">Calendar</h3>\n                    <!-- tools box -->\n                    <div class=\"pull-right box-tools\">\n                        <!-- button with a dropdown -->\n                        <div class=\"btn-group\">\n                            <button type=\"button\" class=\"btn btn-success btn-sm dropdown-toggle\" data-toggle=\"dropdown\">\n                  <i class=\"fa fa-bars\"></i></button>\n                            <ul class=\"dropdown-menu pull-right\" role=\"menu\">\n                                <li><a href=\"#\">Add new event</a></li>\n                                <li><a href=\"#\">Clear events</a></li>\n                                <li class=\"divider\"></li>\n                                <li><a href=\"#\">View calendar</a></li>\n                            </ul>\n                        </div>\n                        <button type=\"button\" class=\"btn btn-success btn-sm\" data-widget=\"collapse\"><i class=\"fa fa-minus\"></i>\n              </button>\n                        <button type=\"button\" class=\"btn btn-success btn-sm\" data-widget=\"remove\"><i class=\"fa fa-times\"></i>\n              </button>\n                    </div>\n                    <!-- /. tools -->\n                </div>\n                <!-- /.box-header -->\n                <div class=\"box-body no-padding\">\n                    <!--The calendar -->\n                    <div id=\"calendar\" style=\"width: 100%\"></div>\n                </div>\n                <!-- /.box-body -->\n                <div class=\"box-footer text-black\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-6\">\n                            <!-- Progress bars -->\n                            <div class=\"clearfix\">\n                                <span class=\"pull-left\">Task #1</span>\n                                <small class=\"pull-right\">90%</small>\n                            </div>\n                            <div class=\"progress xs\">\n                                <div class=\"progress-bar progress-bar-green\" style=\"width: 90%;\"></div>\n                            </div>\n\n                            <div class=\"clearfix\">\n                                <span class=\"pull-left\">Task #2</span>\n                                <small class=\"pull-right\">70%</small>\n                            </div>\n                            <div class=\"progress xs\">\n                                <div class=\"progress-bar progress-bar-green\" style=\"width: 70%;\"></div>\n                            </div>\n                        </div>\n                        <!-- /.col -->\n                        <div class=\"col-sm-6\">\n                            <div class=\"clearfix\">\n                                <span class=\"pull-left\">Task #3</span>\n                                <small class=\"pull-right\">60%</small>\n                            </div>\n                            <div class=\"progress xs\">\n                                <div class=\"progress-bar progress-bar-green\" style=\"width: 60%;\"></div>\n                            </div>\n\n                            <div class=\"clearfix\">\n                                <span class=\"pull-left\">Task #4</span>\n                                <small class=\"pull-right\">40%</small>\n                            </div>\n                            <div class=\"progress xs\">\n                                <div class=\"progress-bar progress-bar-green\" style=\"width: 40%;\"></div>\n                            </div>\n                        </div>\n                        <!-- /.col -->\n                    </div>\n                    <!-- /.row -->\n                </div>\n            </div>\n            <!-- /.box -->\n\n        </section>\n        <!-- right col -->\n    </div>\n    <!-- /.row (main row) -->\n\n</section>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-control-sidebar',\n  templateUrl: './control-sidebar.component.html',\n  styleUrls: ['./control-sidebar.component.css']\n})\nexport class ControlSidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<aside class=\"control-sidebar control-sidebar-dark\">\n    <!-- Create the tabs -->\n    <ul class=\"nav nav-tabs nav-justified control-sidebar-tabs\">\n        <li><a href=\"#control-sidebar-home-tab\" data-toggle=\"tab\"><i class=\"fa fa-home\"></i></a></li>\n        <li><a href=\"#control-sidebar-settings-tab\" data-toggle=\"tab\"><i class=\"fa fa-gears\"></i></a></li>\n    </ul>\n    <!-- Tab panes -->\n    <div class=\"tab-content\">\n        <!-- Home tab content -->\n        <div class=\"tab-pane\" id=\"control-sidebar-home-tab\">\n            <h3 class=\"control-sidebar-heading\">Recent Activity</h3>\n            <ul class=\"control-sidebar-menu\">\n                <li>\n                    <a href=\"javascript:void(0)\">\n                        <i class=\"menu-icon fa fa-birthday-cake bg-red\"></i>\n\n                        <div class=\"menu-info\">\n                            <h4 class=\"control-sidebar-subheading\">Langdon's Birthday</h4>\n\n                            <p>Will be 23 on April 24th</p>\n                        </div>\n                    </a>\n                </li>\n                <li>\n                    <a href=\"javascript:void(0)\">\n                        <i class=\"menu-icon fa fa-user bg-yellow\"></i>\n\n                        <div class=\"menu-info\">\n                            <h4 class=\"control-sidebar-subheading\">Frodo Updated His Profile</h4>\n\n                            <p>New phone +1(800)555-1234</p>\n                        </div>\n                    </a>\n                </li>\n                <li>\n                    <a href=\"javascript:void(0)\">\n                        <i class=\"menu-icon fa fa-envelope-o bg-light-blue\"></i>\n\n                        <div class=\"menu-info\">\n                            <h4 class=\"control-sidebar-subheading\">Nora Joined Mailing List</h4>\n\n                            <p>nora@example.com</p>\n                        </div>\n                    </a>\n                </li>\n                <li>\n                    <a href=\"javascript:void(0)\">\n                        <i class=\"menu-icon fa fa-file-code-o bg-green\"></i>\n\n                        <div class=\"menu-info\">\n                            <h4 class=\"control-sidebar-subheading\">Cron Job 254 Executed</h4>\n\n                            <p>Execution time 5 seconds</p>\n                        </div>\n                    </a>\n                </li>\n            </ul>\n            <!-- /.control-sidebar-menu -->\n\n            <h3 class=\"control-sidebar-heading\">Tasks Progress</h3>\n            <ul class=\"control-sidebar-menu\">\n                <li>\n                    <a href=\"javascript:void(0)\">\n                        <h4 class=\"control-sidebar-subheading\">\n                            Custom Template Design\n                            <span class=\"label label-danger pull-right\">70%</span>\n                        </h4>\n\n                        <div class=\"progress progress-xxs\">\n                            <div class=\"progress-bar progress-bar-danger\" style=\"width: 70%\"></div>\n                        </div>\n                    </a>\n                </li>\n                <li>\n                    <a href=\"javascript:void(0)\">\n                        <h4 class=\"control-sidebar-subheading\">\n                            Update Resume\n                            <span class=\"label label-success pull-right\">95%</span>\n                        </h4>\n\n                        <div class=\"progress progress-xxs\">\n                            <div class=\"progress-bar progress-bar-success\" style=\"width: 95%\"></div>\n                        </div>\n                    </a>\n                </li>\n                <li>\n                    <a href=\"javascript:void(0)\">\n                        <h4 class=\"control-sidebar-subheading\">\n                            Laravel Integration\n                            <span class=\"label label-warning pull-right\">50%</span>\n                        </h4>\n\n                        <div class=\"progress progress-xxs\">\n                            <div class=\"progress-bar progress-bar-warning\" style=\"width: 50%\"></div>\n                        </div>\n                    </a>\n                </li>\n                <li>\n                    <a href=\"javascript:void(0)\">\n                        <h4 class=\"control-sidebar-subheading\">\n                            Back End Framework\n                            <span class=\"label label-primary pull-right\">68%</span>\n                        </h4>\n\n                        <div class=\"progress progress-xxs\">\n                            <div class=\"progress-bar progress-bar-primary\" style=\"width: 68%\"></div>\n                        </div>\n                    </a>\n                </li>\n            </ul>\n            <!-- /.control-sidebar-menu -->\n\n        </div>\n        <!-- /.tab-pane -->\n        <!-- Stats tab content -->\n        <div class=\"tab-pane\" id=\"control-sidebar-stats-tab\">Stats Tab Content</div>\n        <!-- /.tab-pane -->\n        <!-- Settings tab content -->\n        <div class=\"tab-pane\" id=\"control-sidebar-settings-tab\">\n            <form method=\"post\">\n                <h3 class=\"control-sidebar-heading\">General Settings</h3>\n\n                <div class=\"form-group\">\n                    <label class=\"control-sidebar-subheading\">\n              Report panel usage\n              <input type=\"checkbox\" class=\"pull-right\" checked>\n            </label>\n\n                    <p>\n                        Some information about this general settings option\n                    </p>\n                </div>\n                <!-- /.form-group -->\n\n                <div class=\"form-group\">\n                    <label class=\"control-sidebar-subheading\">\n              Allow mail redirect\n              <input type=\"checkbox\" class=\"pull-right\" checked>\n            </label>\n\n                    <p>\n                        Other sets of options are available\n                    </p>\n                </div>\n                <!-- /.form-group -->\n\n                <div class=\"form-group\">\n                    <label class=\"control-sidebar-subheading\">\n              Expose author name in posts\n              <input type=\"checkbox\" class=\"pull-right\" checked>\n            </label>\n\n                    <p>\n                        Allow the user to show his name in blog posts\n                    </p>\n                </div>\n                <!-- /.form-group -->\n\n                <h3 class=\"control-sidebar-heading\">Chat Settings</h3>\n\n                <div class=\"form-group\">\n                    <label class=\"control-sidebar-subheading\">\n              Show me as online\n              <input type=\"checkbox\" class=\"pull-right\" checked>\n            </label>\n                </div>\n                <!-- /.form-group -->\n\n                <div class=\"form-group\">\n                    <label class=\"control-sidebar-subheading\">\n              Turn off notifications\n              <input type=\"checkbox\" class=\"pull-right\">\n            </label>\n                </div>\n                <!-- /.form-group -->\n\n                <div class=\"form-group\">\n                    <label class=\"control-sidebar-subheading\">\n              Delete chat history\n              <a href=\"javascript:void(0)\" class=\"text-red pull-right\"><i class=\"fa fa-trash-o\"></i></a>\n            </label>\n                </div>\n                <!-- /.form-group -->\n            </form>\n        </div>\n        <!-- /.tab-pane -->\n    </div>\n</aside>\n<!-- Add the sidebar's background. This div must be placed\n       immediately after the control sidebar -->\n<div class=\"control-sidebar-bg\"></div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<footer class=\"main-footer\">\n    <div class=\"pull-right hidden-xs\">\n        <b>Version</b> 1.0.0\n    </div>\n    <strong>Copyright &copy; 2019-2020 <a href=\"#\"> QNU</a>.</strong> All rights reserved.\n</footer>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<header class=\"main-header\">\n    <!-- Logo -->\n    <a routerLink=\"admin\" class=\"logo\">\n        <!-- mini logo for sidebar mini 50x50 pixels -->\n        <span class=\"logo-mini\"><b>TQG</b></span>\n        <!-- logo for regular state and mobile devices -->\n        <span class=\"logo-lg\">Thi <b>THPTQG</b></span>\n    </a>\n    <!-- Header Navbar: style can be found in header.less -->\n    <nav class=\"navbar navbar-static-top\">\n        <!-- Sidebar toggle button-->\n        <a href=\"#\" class=\"sidebar-toggle\" data-toggle=\"push-menu\" role=\"button\">\n            <span class=\"sr-only\">Toggle navigation</span>\n        </a>\n\n        <div class=\"navbar-custom-menu\">\n            <ul class=\"nav navbar-nav\">\n                <!-- Messages: style can be found in dropdown.less-->\n                <li class=\"dropdown messages-menu\">\n                    <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\n                        <i class=\"fa fa-envelope-o\"></i>\n                        <span class=\"label label-success\">4</span>\n                    </a>\n                    <ul class=\"dropdown-menu\">\n                        <li class=\"header\">You have 4 messages</li>\n                        <li>\n                            <!-- inner menu: contains the actual data -->\n                            <ul class=\"menu\">\n                                <li>\n                                    <!-- start message -->\n                                    <a href=\"#\">\n                                        <div class=\"pull-left\">\n                                            <img src=\"assets/images/avatar5.png\" class=\"img-circle\" alt=\"User Image\">\n                                        </div>\n                                        <h4>\n                                            Support Team\n                                            <small><i class=\"fa fa-clock-o\"></i> 5 mins</small>\n                                        </h4>\n                                        <p>Why not buy a new awesome theme?</p>\n                                    </a>\n                                </li>\n                                <!-- end message -->\n                                <li>\n                                    <a href=\"#\">\n                                        <div class=\"pull-left\">\n                                            <img src=\"assets/images/avatar5.png\" class=\"img-circle\" alt=\"User Image \">\n                                        </div>\n                                        <h4>\n                                            AdminLTE Design Team\n                                            <small><i class=\"fa fa-clock-o\"></i> 2 hours</small>\n                                        </h4>\n                                        <p>Why not buy a new awesome theme?</p>\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href=\"#\">\n                                        <div class=\"pull-left\">\n                                            <img src=\"assets/images/avatar5.png\" class=\"img-circle\" alt=\"User Image\">\n                                        </div>\n                                        <h4>\n                                            Developers\n                                            <small><i class=\"fa fa-clock-o\"></i> Today</small>\n                                        </h4>\n                                        <p>Why not buy a new awesome theme?</p>\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href=\"#\">\n                                        <div class=\"pull-left\">\n                                            <img src=\"assets/images/avatar5.png\" class=\"img-circle\" alt=\"User Image\">\n                                        </div>\n                                        <h4>\n                                            Sales Department\n                                            <small><i class=\"fa fa-clock-o\"></i> Yesterday</small>\n                                        </h4>\n                                        <p>Why not buy a new awesome theme?</p>\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href=\"#\">\n                                        <div class=\"pull-left\">\n                                            <img src=\"assets/images/avatar5.png\" class=\"img-circle\" alt=\"User Image\">\n                                        </div>\n                                        <h4>\n                                            Reviewers\n                                            <small><i class=\"fa fa-clock-o\"></i> 2 days</small>\n                                        </h4>\n                                        <p>Why not buy a new awesome theme?</p>\n                                    </a>\n                                </li>\n                            </ul>\n                        </li>\n                        <li class=\"footer\"><a href=\"#\">See All Messages</a></li>\n                    </ul>\n                </li>\n                <!-- Notifications: style can be found in dropdown.less -->\n                <li class=\"dropdown notifications-menu\">\n                    <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\n                        <i class=\"fa fa-bell-o\"></i>\n                        <span class=\"label label-warning\">10</span>\n                    </a>\n                    <ul class=\"dropdown-menu\">\n                        <li class=\"header\">You have 10 notifications</li>\n                        <li>\n                            <!-- inner menu: contains the actual data -->\n                            <ul class=\"menu\">\n                                <li>\n                                    <a href=\"#\">\n                                        <i class=\"fa fa-users text-aqua\"></i> 5 new members joined today\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href=\"#\">\n                                        <i class=\"fa fa-warning text-yellow\"></i> Very long description here that may not fit into the page and may cause design problems\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href=\"#\">\n                                        <i class=\"fa fa-users text-red\"></i> 5 new members joined\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href=\"#\">\n                                        <i class=\"fa fa-shopping-cart text-green\"></i> 25 sales made\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href=\"#\">\n                                        <i class=\"fa fa-user text-red\"></i> You changed your username\n                                    </a>\n                                </li>\n                            </ul>\n                        </li>\n                        <li class=\"footer\"><a href=\"#\">View all</a></li>\n                    </ul>\n                </li>\n                <!-- Tasks: style can be found in dropdown.less -->\n                <li class=\"dropdown tasks-menu\">\n                    <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\n                        <i class=\"fa fa-flag-o\"></i>\n                        <span class=\"label label-danger\">9</span>\n                    </a>\n                    <ul class=\"dropdown-menu\">\n                        <li class=\"header\">You have 9 tasks</li>\n                        <li>\n                            <!-- inner menu: contains the actual data -->\n                            <ul class=\"menu\">\n                                <li>\n                                    <!-- Task item -->\n                                    <a href=\"#\">\n                                        <h3>\n                                            Design some buttons\n                                            <small class=\"pull-right\">20%</small>\n                                        </h3>\n                                        <div class=\"progress xs\">\n                                            <div class=\"progress-bar progress-bar-aqua\" style=\"width: 20%\" role=\"progressbar\" aria-valuenow=\"20\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n                                                <span class=\"sr-only\">20% Complete</span>\n                                            </div>\n                                        </div>\n                                    </a>\n                                </li>\n                                <!-- end task item -->\n                                <li>\n                                    <!-- Task item -->\n                                    <a href=\"#\">\n                                        <h3>\n                                            Create a nice theme\n                                            <small class=\"pull-right\">40%</small>\n                                        </h3>\n                                        <div class=\"progress xs\">\n                                            <div class=\"progress-bar progress-bar-green\" style=\"width: 40%\" role=\"progressbar\" aria-valuenow=\"20\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n                                                <span class=\"sr-only\">40% Complete</span>\n                                            </div>\n                                        </div>\n                                    </a>\n                                </li>\n                                <!-- end task item -->\n                                <li>\n                                    <!-- Task item -->\n                                    <a href=\"#\">\n                                        <h3>\n                                            Some task I need to do\n                                            <small class=\"pull-right\">60%</small>\n                                        </h3>\n                                        <div class=\"progress xs\">\n                                            <div class=\"progress-bar progress-bar-red\" style=\"width: 60%\" role=\"progressbar\" aria-valuenow=\"20\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n                                                <span class=\"sr-only\">60% Complete</span>\n                                            </div>\n                                        </div>\n                                    </a>\n                                </li>\n                                <!-- end task item -->\n                                <li>\n                                    <!-- Task item -->\n                                    <a href=\"#\">\n                                        <h3>\n                                            Make beautiful transitions\n                                            <small class=\"pull-right\">80%</small>\n                                        </h3>\n                                        <div class=\"progress xs\">\n                                            <div class=\"progress-bar progress-bar-yellow\" style=\"width: 80%\" role=\"progressbar\" aria-valuenow=\"20\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n                                                <span class=\"sr-only\">80% Complete</span>\n                                            </div>\n                                        </div>\n                                    </a>\n                                </li>\n                                <!-- end task item -->\n                            </ul>\n                        </li>\n                        <li class=\"footer\">\n                            <a href=\"#\">View all tasks</a>\n                        </li>\n                    </ul>\n                </li>\n                <!-- User Account: style can be found in dropdown.less -->\n                <li class=\"dropdown user user-menu\">\n                    <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\n                        <img src=\"assets/images/avatar5.png\" class=\"user-image\" alt=\"User Image\">\n                        <span class=\"hidden-xs\">Alexander Pierce</span>\n                    </a>\n                    <ul class=\"dropdown-menu\">\n                        <!-- User image -->\n                        <li class=\"user-header\">\n                            <img src=\"assets/images/avatar5.png\" class=\"img-circle\" alt=\"User Image\">\n\n                            <p>\n                                Alexander Pierce - Web Developer\n                                <small>Member since Nov. 2012</small>\n                            </p>\n                        </li>\n                        <!-- Menu Body -->\n                        <li class=\"user-body\">\n                            <div class=\"row\">\n                                <div class=\"col-xs-4 text-center\">\n                                    <a href=\"#\">Followers</a>\n                                </div>\n                                <div class=\"col-xs-4 text-center\">\n                                    <a href=\"#\">Sales</a>\n                                </div>\n                                <div class=\"col-xs-4 text-center\">\n                                    <a href=\"#\">Friends</a>\n                                </div>\n                            </div>\n                            <!-- /.row -->\n                        </li>\n                        <!-- Menu Footer-->\n                        <li class=\"user-footer\">\n                            <div class=\"pull-left\">\n                                <a href=\"#\" class=\"btn btn-default btn-flat\">Profile</a>\n                            </div>\n                            <div class=\"pull-right\">\n                                <a href=\"../admin/logout\" class=\"btn btn-default btn-flat\">Sign out</a>\n                            </div>\n                        </li>\n                    </ul>\n                </li>\n                <!-- Control Sidebar Toggle Button -->\n                <li>\n                    <a href=\"#\" data-toggle=\"control-sidebar\"><i class=\"fa fa-gears\"></i></a>\n                </li>\n            </ul>\n        </div>\n    </nav>\n</header>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-left-side',\n  templateUrl: './left-side.component.html',\n  styleUrls: ['./left-side.component.css']\n})\nexport class LeftSideComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<aside class=\"main-sidebar\">\n    <!-- sidebar: style can be found in sidebar.less -->\n    <section class=\"sidebar\">\n        <!-- sidebar menu: : style can be found in sidebar.less -->\n        <ul class=\"sidebar-menu\">\n            <li class=\"header\">MAIN NAVIGATION</li>\n            <li class=\"active treeview\">\n                <a routerLink=\"dashboard\"> <i class=\"fa fa-dashboard\"></i> <span>Dashboard</span> </a>\n            </li>\n            <li class=\"treeview\">\n                <a routerLink=\"/admin/customers\" routerLinkActive=\"active\">\n                    <i class=\"fa fa-user\"></i> <span>Khách hàng</span>\n                </a>\n            </li>\n            <li class=\"treeview\">\n                <a routerLink=\"orders\" routerLinkActive=\"active\">\n                    <i class=\"fa fa-pie-chart\"></i>\n                    <span>Đơn hàng</span>\n                    <span class=\"pull-right-container\">\n            <i class=\"fa fa-angle-left pull-right\"></i>\n          </span>\n                </a>\n                <ul class=\"treeview-menu\">\n                    <li>\n                        <a [routerLink]=\"['/admin/orders']\" routerLinkActive=\"active\"><i class=\"fa fa-circle-o\"></i> Danh sách đơn hàng</a\n            >\n          </li>\n          <li>\n            <a [routerLink]=\"['/admin/sell-prod']\" routerLinkActive=\"active\"\n              ><i class=\"fa fa-circle-o\"></i> Bán hàng</a\n            >\n          </li>\n        </ul>\n      </li>\n      <li class=\"treeview\">\n        <a [routerLink]=\"['/admin/products']\" routerLinkActive=\"active\" >\n          <i class=\"fa fa-laptop\"></i>\n          <span>Sản phẩm</span>\n          <span class=\"pull-right-container\">\n            <i class=\"fa fa-angle-left pull-right\"></i>\n          </span>\n        </a>\n                        <ul class=\"treeview-menu\">\n                            <li>\n                                <a [routerLink]=\"['/admin/products']\" routerLinkActive=\"active\"><i class=\"fa fa-circle-o\"></i> Danh sách</a\n            >\n          </li>\n          <li>\n            <a [routerLink]=\"['/admin/categories-prod']\" routerLinkActive=\"active\"\n              ><i class=\"fa fa-circle-o\"></i> Danh mục sản phẩm</a\n            >\n          </li>\n          <li>\n            <a [routerLink]=\"['/admin/manuf-prod']\" routerLinkActive=\"active\"\n              ><i class=\"fa fa-circle-o\"></i> Nhà sản xuất</a\n            >\n          </li>\n          <li>\n            <a [routerLink]=\"['/admin/suppliers-prod']\" routerLinkActive=\"active\"\n              ><i class=\"fa fa-circle-o\"></i> Nhà cung cấp</a\n            >\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </section>\n  <!-- /.sidebar -->\n</aside>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.css']\n})\nexport class QuestionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  question works!\n</p>\n","import { Component, OnInit } from '@angular/core';\nimport { StudentService } from 'src/app/_services/student.service';\nimport { Student } from 'src/app/_models/student';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-student',\n  templateUrl: './student.component.html',\n  styleUrls: ['./student.component.css']\n})\nexport class StudentComponent implements OnInit {\n\n  listStudent: Student[];\n  baseDataListStudent: Student[];\n\n\n  constructor(\n    private studentService: StudentService,\n    private activatedRoute: ActivatedRoute,\n  ) { }\n\n  ngOnInit() {\n    // this.activatedRoute.data.subscribe(data => {\n    //   if (data.student !== undefined && data.student !== null) {\n    //     this.listStudent = data.student.result;\n    //   }\n    // });\n    // this.baseDataListStudent = this.listStudent;\n  }\n\n  updateListStu(data){\n    // this.listStudent = data; // lưu dữ liệu bên html\n    // this.baseDataListStudent = []; // lưu dữ liệu gốc\n    // if (data != null ) {\n    //   this.listStudent.forEach(x => {\n    //     this.baseDataListStudent.push(x);\n    //   });\n    // }\n  }\n\n  getListStudent(){\n    this.studentService.getAllStudent().subscribe(data=>(this.listStudent=data)) \n  }\n}\n","<section class=\"content-header\">\n    <h1>\n        Học Sinh\n        <small></small>\n    </h1>\n    <ol class=\"breadcrumb\">\n        <li><a href=\"#\"><i class=\"fa fa-dashboard\"></i> Home</a></li>\n        <li><a href=\"#\">Học Sinh</a></li>\n        <li class=\"active\">Danh sách học sinh</li>\n    </ol>\n</section>\n\n<section class=\"content\">\n    <div id=\"error_message\">\n\n    </div>\n    <div class=\"row\">\n        <div class=\"col-xs-12\">\n            <div class=\"box box-primary\">\n                <div class=\"box-header\" style=\"text-align:center; height: 50px;line-height: 50px;white-space: nowrap;\">\n                    <h3 class=\"box-title\">Danh sách học sinh</h3>\n                    <div class=\"pull-right\">\n                        <div class=\"col-xs-9\">\n                            <form method=\"post\" enctype=\"multipart/form-data\" id=\"file_form\">\n                                <a class=\"btn btn-app \">\n                                    <input type=\"file\" id=\"inputFile\" name=\"inputFile\">\n                                </a>\n                                <a id=\"btn_import\" class=\"btn btn-app btn_import\"><i class=\"glyphicon glyphicon-import\"></i>Import</a>\n                            </form>\n                        </div>\n                        <div class=\"col-xs-3\">\n                            <a href=\"\" class=\"btn btn-app \"><i class=\"glyphicon glyphicon-export\"></i>Export</a>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"box-body\">\n                    <table id=\"example1\" class=\"table table-bordered table-hover\">\n                        <thead>\n                            <tr>\n                                <th>STT</th>\n                                <th>Tên</th>\n                                <th>Ngày sinh</th>\n                                <th>Giới tính</th>\n                                <th>CMND</th>\n                                <th>Môn Thi</th>\n                                <th>Công cụ</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <ng-template ngFor let-item [ngForOf]=\"listStudent\" let-i=\"index\">\n\n                                <tr>\n                                    <td>{{item.id}}</td>\n                                    <td>{{item.fullname}}</td>\n                                    <td>{{item.namsinh}}</td>\n                                    <td>{{item.gender}} </td>\n                                    <td>{{item.cmnd}}</td>\n                                    <td>{{item.list_subject}} </td>\n                                    <td>\n                                        <i title=\"Sửa\" class=\"fa fa-pencil-square-o\" style=\"margin-right: 5px;margin-left: 5px;\"></i>\n                                        <ng-container *ngIf=\"item.type==1; else elseTemplate\">\n                                            <i title=\" Hiện \" class=\"fa fa-eye\"> </i>\n                                        </ng-container>\n                                        <ng-template #elseTemplate>\n                                            <i title=\" Ẩn \" class=\"fa fa-eye-slash\"> </i>\n                                        </ng-template>\n                                        <i title=\" Xóa \" class=\"fa fa-trash-o \" style=\"color: darkred; \"></i>\n                                    </td>\n                                </tr>\n                            </ng-template>\n                        </tbody>\n                    </table>\n                </div>\n                <!-- /.box-body -->\n            </div>\n            <!-- /.box -->\n        </div>\n        <!-- /.col -->\n    </div>\n    <!-- /.row -->\n</section>\n<!-- /.content -->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-subject',\n  templateUrl: './subject.component.html',\n  styleUrls: ['./subject.component.css']\n})\nexport class SubjectComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<section class=\"content-header\">\n    <h1>\n        Môn Học\n        <small></small>\n    </h1>\n    <ol class=\"breadcrumb\">\n        <li><a href=\"#\"><i class=\"fa fa-dashboard\"></i> Home</a></li>\n        <li><a href=\"#\">Môn Học</a></li>\n        <li class=\"active\">Danh sách môn học</li>\n    </ol>\n</section>\n\n<section class=\"content\">\n    <div class=\"row\">\n        <div class=\"col-xs-12\">\n            <div class=\"box box-primary\">\n                <!-- {{--\n                <div class=\"box-header\">\n                    <h3 class=\"box-title\">Danh sách môn học</h3>\n                    <div class=\"pull-right\">\n                        <a href=\"{{ asset ('/subject/addsub ') }}\" class=\"btn btn-info \"> <i class=\"fa  fa-plus\"></i> Thêm mới</a>\n                    </div>\n                </div> --}} @if(count($errors) > 0)\n                <div class=\"alert alert-danger\">\n                    Upload Validation Error<br><br>\n                    <ul>\n                        @foreach($errors->all() as $error)\n                        <li>{{ $error }}</li>\n                        @endforeach\n                    </ul>\n                </div> -->\n                <div class=\"alert alert-success alert-block\">\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\">×</button>\n                    <!-- <strong>{{ $message }}</strong> -->\n                </div>\n\n                <form action=\"\" enctype=\"multipart/form-data\" method=\"POST\">\n                    <div class=\"box-header\" style=\"text-align:center; height: 50px;line-height: 50px;white-space: nowrap;\">\n                        <h3 class=\"box-title\">Danh sách môn học</h3>\n                        <div class=\"pull-right\">\n                            <a class=\"btn btn-app \">\n                                <input type=\"file\" name=\"select_file\" id=\"exampleInputFile\">\n                            </a>\n                            <input type=\"submit\" class=\"btn btn-app \" value=\"Import\" /><i class=\"glyphicon glyphicon-import\"></i> {{-- <a class=\"btn btn-app \"><i class=\"glyphicon glyphicon-export\"></i>Export</a> --}}\n                        </div>\n                    </div>\n                </form>\n\n                <div class=\"box-body\">\n                    <table id=\"example1\" class=\"table table-bordered table-hover\">\n                        <thead>\n                            <tr>\n                                <th>STT</th>\n                                <th>Tên</th>\n                                <th>Ngày tạo</th>\n                                <th>Ngày cập nhật</th>\n                                <th>Công cụ</th>\n\n                            </tr>\n                        </thead>\n                        <tbody>\n\n                            <tr>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <td></td>\n                                <td>\n                                    <i title=\"Sửa\" class=\"fa fa-pencil-square-o\" style=\"margin-right: 5px;margin-left: 5px;\"></i> <i title=\" Hiện \" class=\"fa fa-eye\"> </i> <i title=\" Ẩn \" class=\"fa fa-eye-slash\"> </i> @endif\n\n                                    <i title=\" Xóa \" class=\"fa fa-trash-o \" style=\"color: darkred; \"></i>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                <!-- /.box-body -->\n            </div>\n            <!-- /.box -->\n        </div>\n        <!-- /.col -->\n    </div>\n    <!-- /.row -->\n</section>\n<!-- /.content -->"],"sourceRoot":"webpack:///"}